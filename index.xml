<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Loyio&#39;s Blogs</title>
    <link>https://loyio.me/</link>
    <description>Recent content on Loyio&#39;s Blogs</description>
    <image>
      <url>https://loyio.me/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</url>
      <link>https://loyio.me/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Wed, 02 Mar 2022 17:19:04 +0800</lastBuildDate><atom:link href="https://loyio.me/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Leetcode刷题记录</title>
      <link>https://loyio.me/posts/leetcode-record/</link>
      <pubDate>Wed, 02 Mar 2022 17:19:04 +0800</pubDate>
      
      <guid>https://loyio.me/posts/leetcode-record/</guid>
      <description>记录Leetcode题解链接
   No. Problem Solution Link     1 Two Sum Issues Blog   2 Add Two Numbers Issues Blog   3 Longest Substring Without Repeating Characters Issues Blog    </description>
    </item>
    
    <item>
      <title>Loyio&#39;s Handbook Table of Contents</title>
      <link>https://loyio.me/posts/handbook-toc/</link>
      <pubDate>Sat, 31 Jul 2021 07:32:44 +0800</pubDate>
      
      <guid>https://loyio.me/posts/handbook-toc/</guid>
      <description>数学  直角坐标系下的图像 初等数学常用公式 [PDF:下载] 高等数学 [PDF:下载] 线性代数 [PDF:下载] 概率论与数理统计 [PDF:下载]  数据结构 </description>
    </item>
    
    <item>
      <title>场论初步</title>
      <link>https://loyio.me/posts/elementary-field-theory/</link>
      <pubDate>Sat, 10 Jul 2021 10:27:37 +0800</pubDate>
      
      <guid>https://loyio.me/posts/elementary-field-theory/</guid>
      <description>1.方向导数 方向导数的计算公式 设三元函数 $u=u(x,y,z)$ 在点 $P_0(x_0, y_0, z_0)$ 处可微分，则 $u=u(x,y,z)$ 在点 $P_0$ 处沿任意方向 $l$ 的方向导数都存在，且
$$ \frac{\partial u}{\partial l}\Bigl|_{P_{0}} =u&#39;_{x}( P_{0})\cos \alpha +u&#39;_{y}( P_{0})\cos \beta +u&#39;_{z}( P_{0})\cos \gamma $$  二元函数的情况与三元函数类似
 2.梯度 在一个数量场中，函数在所给定点处沿不同的方向，其方向导数一般是不相同的。为研究沿哪一个方向其方向导数最大、或增加的速度最快，于是引入了一个重要的概念&amp;mdash;梯度
设三元函数 $u=u(x,y,z)$ 在点 $P_0(x_0,y_0,z_0)$ 处具有一阶偏导数，则定义
$$ \operatorname{grad}\ u\Bigl|_{P_{0}} =( u&#39;_{x}( P_{0}) ,\ u&#39;_{y}( P_{0}) ,\ u&#39;_{z}( P_{0})) $$ 为函数$u=u(x,y,z)$ 在点$P_0$处的梯度
3.方向导数与梯度的关系 由方向导数的计算公式 $\frac{\partial{u}}{\partial{l}}\bigl|_{P_0} = (u_x&amp;rsquo;(P_0),u_y&amp;rsquo;(P_0),u_z&amp;rsquo;(P_0))$与梯度的定义
$$ \operatorname{grad}\ u\Bigl|_{P_{0}} =( u&#39;_{x}( P_{0}) ,\ u&#39;_{y}( P_{0}) ,\ u&#39;_{z}( P_{0})) $$ 可以得到</description>
    </item>
    
    <item>
      <title>常用函数图像</title>
      <link>https://loyio.me/posts/common-function-graphics/</link>
      <pubDate>Fri, 09 Jul 2021 07:20:24 +0800</pubDate>
      
      <guid>https://loyio.me/posts/common-function-graphics/</guid>
      <description>（一）直角坐标系下的图像 1. 常见图像 ⑤三角函数 （1）正弦函数与余弦函数 （二）极坐标系下的图像 1. 描点法 （1）心形线 极坐标方程：
水平方向：$r=a(1-\cos{\theta})(a&amp;gt;0)$
垂直方向：$r=a(1-\sin{\theta})(a&amp;gt;0)$
直角坐标方程：
$x^2+y^2+ax=a\sqrt{(x^2+y^2)}$ 或$x^2+y^2-ax=a\sqrt{(x^2+y^2)}$
参数方程：
$x=a(2\cos{(t)}-\cos{(2t)})$
$y=a(2\sin{(t)}-\sin{(2t)})$</description>
    </item>
    
    <item>
      <title>一阶微分方程与一阶线性方程的求解</title>
      <link>https://loyio.me/posts/first-order-differential-equationsandlinearequations/</link>
      <pubDate>Thu, 08 Jul 2021 15:07:55 +0800</pubDate>
      
      <guid>https://loyio.me/posts/first-order-differential-equationsandlinearequations/</guid>
      <description>一.可分离变量的一阶微分方程 如果能够把一阶微分方程中所有关于 $y$ 的部分 (包括 $\mathrm{d}y$) 放在一边, 所有关于 $x$ 的部分 (包括 $\mathrm{d}x$) 放在另一边, 则该微分方程被称为是可分离变量的. 例如, 方程 $\mathrm{dy}/\mathrm{dx} = ky$ 可重新整理为 $$ \frac{1}{ky}\mathrm{d}y = \mathrm{d}x, $$ 就是可分离变量的。
然后继续计算的方法就是两遍加积分号求积分。然后再整理求得 $y$。
最终求得的全解，可能会包含一些常数变量。
如果在题干中，涉及到初值时，还是使用以上的求解方法，最后将初值代入求得的全解中，就可以得到未知常数$C$了。
二.一阶线性方程的求解 1.前言 形如 $$ \frac{\mathrm{d}y}{\mathrm{d}x}+p(x)y = q(x) $$ 其中 $p$ 和 $q$ 是关于 $x$ 的函数，这样的方程就称为一阶线性微分方程， 它可能不是可分离变量的, 甚至连线性看起来也不很明显! 例如, $$ \frac{\mathrm{d} y}{\mathrm{~d} x}+6 x^{2} y=\mathrm{e}^{-2 x^{3}} \sin (x) $$ 就不像是线性的, 然而这个方程确实是一阶线性的, 因为 $y$ 和 $\mathrm{d}y/\mathrm{d}x$ 的幂次都是 1. 而方程 $$ \frac{\mathrm{d} y}{\mathrm{~d} x}+6 x^{2} y^{3}=\mathrm{e}^{-2 x^{3}} \sin (x) $$ 不是一阶线性的, 因为 $y^3$ 不是 $y$ 的一次</description>
    </item>
    
    <item>
      <title>常系数微分方程求解</title>
      <link>https://loyio.me/posts/constant-coefficient-differential-equations/</link>
      <pubDate>Thu, 08 Jul 2021 14:55:05 +0800</pubDate>
      
      <guid>https://loyio.me/posts/constant-coefficient-differential-equations/</guid>
      <description>常系数微分方程的形式如下 $$ a_{n} \frac{\mathrm{d}^{n} y}{\mathrm{~d} x^{n}}+\cdots+a_{2} \frac{\mathrm{d}^{2} y}{\mathrm{~d} x^{2}}+a_{1} \frac{\mathrm{d} y}{\mathrm{~d} x}+a_{0} y=f(x) $$ 其中$a_n,\ldots,a_1,a_0$知识一些普通的常实数，左边式子中$\frac{\mathrm{d}^{n} y}{\mathrm{~d} x^{n}}$，代表的是$y$的$n$阶导数。</description>
    </item>
    
    <item>
      <title>常用的泰勒级数</title>
      <link>https://loyio.me/posts/10staylorpolyseries/</link>
      <pubDate>Thu, 08 Jul 2021 13:08:01 +0800</pubDate>
      
      <guid>https://loyio.me/posts/10staylorpolyseries/</guid>
      <description>以下公式来源于South Caolina
1.$\frac{1}{1-x}$ $$ \begin{aligned}\frac{1}{1-x} &amp;amp;=\quad1+x+x^{2}+x^{3}+x^{4}+\ldots \\&amp;amp;=\quad\sum_{n=0}^{\infty} x^{n}\end{aligned} $$
当为几何级数时。只需将$x$视为$r$
$x\in (-1,1)$
2. $e^x$ $$ \begin{aligned}e^{x}\quad &amp;amp;=\quad 1+x+\frac{x^{2}}{2 !}+\frac{x^{3}}{3 !}+\frac{x^{4}}{4 !}+\ldots \\&amp;amp;=\quad\sum_{n=0}^{\infty} \frac{x^{n}}{n !}\end{aligned} $$
3.$\cos{x}$ $$ \begin{aligned}\cos x\quad &amp;amp;=\quad1-\frac{x^{2}}{2 !}+\frac{x^{4}}{4 !}-\frac{x^{6}}{6 !}+\frac{x^{8}}{8 !}-\ldots \\&amp;amp;=\quad\sum_{n=0}^{\infty}(-1)^{n} \frac{x^{2 n}}{(2 n) !}\end{aligned} $$
4.$\sin{x}$ $$ \begin{aligned}\sin x \quad &amp;amp;=\quad x-\frac{x^{3}}{3 !}+\frac{x^{5}}{5 !}-\frac{x^{7}}{7 !}+\frac{x^{9}}{9 !}-\ldots \\&amp;amp;=\quad \sum_{n=1}^{\infty}(-1)^{(n-1)} \frac{x^{2 n-1}}{(2 n-1) !} \stackrel{\text { or }}{=} \sum_{n=0}^{\infty}(-1)^{n} \frac{x^{2 n+1}}{(2 n+1) !}\end{aligned} $$
5.$\ln{(1+x)}$ $$ \begin{aligned}\ln (1+x)\quad &amp;amp;=\quad x-\frac{x^{2}}{2}+\frac{x^{3}}{3}-\frac{x^{4}}{4}+\frac{x^{5}}{5}-\ldots \\&amp;amp;=\quad\sum_{n=1}^{\infty}(-1)^{(n-1)} \frac{x^{n}}{n} \stackrel{\text { or }}{=} \sum_{n=1}^{\infty}(-1)^{n+1} \frac{x^{n}}{n}\end{aligned} $$</description>
    </item>
    
    <item>
      <title>KaTeX(Latex)支持的TeX函数</title>
      <link>https://loyio.me/posts/latex-katex/</link>
      <pubDate>Thu, 08 Jul 2021 08:49:53 +0800</pubDate>
      
      <guid>https://loyio.me/posts/latex-katex/</guid>
      <description>字符与Unicode 希腊字母（Greek Letters） 小写形式    渲染字符 Katex 渲染字符 Katex 渲染字符 Katex 渲染字符 Katex     $\alpha$ \alpha $\beta$ \beta $\gamma$ \gamma $\delta$ \delta   $\epsilon$ \epsilon $\zeta$ \zeta $\eta$ \eta $\theta$ \theta   $\iota$ \iota $\kappa$ \kappa $\lambda$ \lambda $\mu$ \mu   $\nu$ \nu $\xi$ \xi $\omicron$ \omicron $\pi$ \pi   $\rho$ \rho $\sigma$ \sigma $\tau$ \tau $\upsilon$ \upsilon   $\phi$ \phi $\chi$ \chi $\psi$ \psi $\omega$ \omega   $\varepsilon$ \varepsilon $\varkappa$ \varkappa $\vartheta$ \vartheta $\thetasym$ \thetasym   $\varpi$ \varpi $\varrho$ \varrho $\varsigma$ \varsigma $\varphi$ \varphi   $\digamma$ \digamma $\varGamma$ \varGamma $\varDelta$ \varDelta $\varTheta$ \varTheta   $\varLambda$ \varLambda $\varXi$ \varXi $\varPi$ \varPi $\varSigma$ \varSigma   $\varUpsilon$ \varUpsilon $\varPhi$ \varPhi $\varPsi$ \varPsi $\varOmega$ \varOmega    大写形式    渲染字符 Katex 渲染字符 Katex 渲染字符 Katex 渲染字符 Katex     $\Alpha$ \Alpha $\Beta$ \Beta $\Gamma$ \Gamma $\Delta$ \Delta   $\Epsilon$ \Epsilon $\Zeta$ \Zeta $\Eta$ \Eta $\Theta$ \Theta   $\Iota$ \Iota $\Kappa$ \Kappa $\Lambda$ \Lambda $\Mu$ \Mu   $\Nu$ \Nu $\Xi$ \Xi $\Omicron$ \Omicron $\Pi$ \Pi   $\Rho$ \Rho $\Sigma$ \Sigma $\Tau$ \Tau $\Upsilon$ \Upsilon   $\Phi$ \Phi $\Chi$ \Chi $\Psi$ \Psi $\Omega$ \Omega    其它字符    渲染字符 Katex 渲染字符 Katex 渲染字符 Katex 渲染字符 Katex     $\imath$ \imath $\nabla$ \nabla $\Im$ \Im $\Reals$ \Reals   $\text{\OE}$ \text{\OE} $\jmath$ \jmath $\partial$ \partial $\image$ \image   $\wp$ \wp $\text{\o}$ \text{\o} $\aleph$ \aleph $\Game$ \Game   $\Bbbk$ \Bbbk $\weierp$ \weierp $\text{\O}$ \text{\O} $\alef$ \alef   $\Finv$ \Finv $\N$ \N $\Z$ \Z $\text{\ss}$ \text{\ss}   $\alefsym$ \alefsym $\cnums$ \cnums $\natnums$ \natnums $\text{\aa}$ \text{\aa}   $\text{\i}$ \text{\i} $\beth$ \beth $\Complex$ \Complex $\R$ \R   $\text{\AA}$ \text{\AA} $\text{\j}$ \text{\j} $\gimel$ \gimel $\ell$ \ell   $\Re$ \Re $\text{\ae}$ \text{\ae} $\daleth$ \daleth $\hbar$ \hbar   $\real$ \real $\text{\AE}$ \text{\AE} $\eth$ \eth $\hslash$ \hslash   $\reals$ \reals $\text{\oe}$ \text{\oe}        操作符 大操作符    渲染操作符 Katex 说明 举例 Katex函数     $\sum$ \sum 求和符号 $\displaystyle\sum_{n=1}^{6}{4n}$ \displaystyle\sum_{n=1}^{6}{4n}   $\prod$ \prod 连乘、求积符号 $\displaystyle\prod_{n=1}^{\infty}{(1-\frac{1}{4n^2})}$ \displaystyle\prod_{n=1}^{\infty}{(1-\frac{1}{4n^2})   $\bigotimes$ \bigotimes      $\bigvee$ \bigvee      $\int$ \int 积分符号 $\int_{0}^{t}{f(t)dt}$ \int_{0}^{t}{f(t)dt}    </description>
    </item>
    
    <item>
      <title>图像处理第三次实验-图像预处理</title>
      <link>https://loyio.me/posts/image-processing-cv-experiment03/</link>
      <pubDate>Fri, 26 Mar 2021 21:25:11 +0800</pubDate>
      
      <guid>https://loyio.me/posts/image-processing-cv-experiment03/</guid>
      <description>一.对比度优化方法CLAHE 1.使用软件fiji优化图片序列 实验过程：
1）下载安装Fiji
2）解压30-T4N2, 24_pre_waterT1C.nii.zip
3）打开一张图片
4）在fiji中, Process -&amp;gt; Enhance Local Contrast（CLAHE, Contrast Limited Adaptive Histogram Equalization 直方图均衡化算法），将参数设置为如下，观察图片变化
blocksize = 64 histogram bins = 128 max slope = 2.0
图片效果如下
  原图
    处理后的图
  可以看到部分区域对比度增强，图像中体现的信息也更为突出。
2.使用fiji脚本批量处理一组图片 1）使用fiji打开16-T2N2,33+_post_waterT1C.nii.gz
2）使用Fiji&amp;rsquo;s scripting editor，将语言更改为IJ1 Macro，运行脚本
3）最后点击菜单栏File → Save As → Image Sequence
保存为png格式，存储在文件夹中。
二.图像x-ray去噪 使用median filter算法，批处理文件/x-ray-images-enhancement-master/images/
中值滤波器：中值滤波器是众所周知的阶数统计滤波器之一，因为它对某些特定的噪声类型（例如“高斯”，“随机”和“盐和胡椒”噪声）具有良好的性能。根据中值滤波器，将M×M邻域的中心像素替换为相应窗口的中值。注意，噪声像素被认为与中值有很大差异。使用这种思想，中值滤波器可以消除这种类型的噪声问题。
批处理代码实现如下：
path=&amp;#39;images/&amp;#39; file_list = [f for f in os.listdir(path) if not f.</description>
    </item>
    
    <item>
      <title>图像处理第二次试验-裁剪图像</title>
      <link>https://loyio.me/posts/image-processing-cv-experiment02/</link>
      <pubDate>Mon, 22 Mar 2021 21:19:03 +0800</pubDate>
      
      <guid>https://loyio.me/posts/image-processing-cv-experiment02/</guid>
      <description>医学图像预处理 1）搭建运行环境，运行Brain Tumor Detection代码中裁剪功能 预先安装好相关模块，安装Jupyter Notebook交互式计算环境
conda install jupyter 首先导入相关包
import tensorflow as tf from tensorflow.keras.layers import Conv2D, Input, ZeroPadding2D, BatchNormalization, Activation, MaxPooling2D, Flatten, Dense from tensorflow.keras.models import Model, load_model from tensorflow.keras.callbacks import TensorBoard, ModelCheckpoint from sklearn.model_selection import train_test_split from sklearn.metrics import f1_score from sklearn.utils import shuffle import cv2 import imutils import numpy as np import matplotlib.pyplot as plt import time from os import listdir  %matplotlib inline 因为这里只是进行图形预处理，对Brain Tumor图片进行裁剪，主要用到的包是cv2, imutils, numpy, matplotlib.</description>
    </item>
    
    <item>
      <title>图像处理第一次实验-初识CV</title>
      <link>https://loyio.me/posts/image-processing-cv-experiment01/</link>
      <pubDate>Sat, 20 Mar 2021 21:14:43 +0800</pubDate>
      
      <guid>https://loyio.me/posts/image-processing-cv-experiment01/</guid>
      <description>1.jpg
2.jpg
1.对1.jpg 分别作灰度化, 模糊化处理. 代码如下
&amp;#34;&amp;#34;&amp;#34; @Project: imageProcessing @Author: loyio @Date: 3/20/21 &amp;#34;&amp;#34;&amp;#34; from PIL import Image, ImageFilter  if __name__ == &amp;#39;__main__&amp;#39;:  # greyscale  imgfileOne = &amp;#34;Sample/1&amp;#34;  sample_img = Image.open(imgfileOne+&amp;#34;.jpg&amp;#34;).convert(&amp;#39;L&amp;#39;)  sample_img.save(imgfileOne+&amp;#34;_processed_gray.jpg&amp;#34;)   # Blur  # sample_img = Image.open(imgfileOne+&amp;#34;.jpg&amp;#34;).filter(ImageFilter.BLUR) 	sample_img = Image.open(imgfileOne+&amp;#34;.jpg&amp;#34;).filter(ImageFilter.BoxBlur(5))  sample_img.save(imgfileOne + &amp;#34;_processed_blur.jpg&amp;#34;) 图片效果如下
灰度处理
模糊处理
2.对2.jpg生成手绘效果 代码如下
&amp;#34;&amp;#34;&amp;#34; @Project: imageProcessing @Author: loyio @Date: 3/20/21 &amp;#34;&amp;#34;&amp;#34; from PIL import Image, ImageFilter import numpy as np  if __name__ == &amp;#39;__main__&amp;#39;:  # Paint  imgfileTwo = &amp;#34;Sample/2&amp;#34;  sample_img_ary = np.</description>
    </item>
    
    <item>
      <title>rclone突破750G转存限制（使用gclone和Autoclone）</title>
      <link>https://loyio.me/posts/gclone-over-750g/</link>
      <pubDate>Thu, 07 May 2020 19:59:48 +0800</pubDate>
      
      <guid>https://loyio.me/posts/gclone-over-750g/</guid>
      <description>最近一直都在折腾GoogleDrive，有时候看到Tg群里面大佬分享的资源，都特别的大，本来一开始我是使用插件copy url to googledrive，应该是这个名称吧，不过比较鸡肋的是，这个只能转存到个人盘中，在没购买容量套餐前所有的人都默认是15G，远远不够用，虽然我买了一年的100G，但是依然不够用，随便转存点什么，就超过100G了，而且还要自己手动移动到团队盘
在之前我就讲过了用rclone挂载GoogleDrive到linux服务器上的教程，大家可以点击下面的链接查看
使用谷歌云搭建google drive离线下载服务器
在用rclone转存文件时，我们可能会遇到超过日转存限制的情况，Google每天的限制750G，这对于我们这些特别喜欢搬运的人来说是远远不够的
首先说一些解决方法原理：
谷歌开发者平台可以多个项目，每个项目下还可以创建多个服务账号（SA：Service Account），每个SA又可以创建自己单独的Api，每个Api都可以和单个用户一样拥有750GB的权限。
这里我们要用到autoclone，批量生成SA账号，还要用到gclone，自动切换SA，以突破750G的限制
我在这里不说具体的操作过程了，大佬们都有写，做重复的事情没有什么意义
gclone 搬山之术 by HE-SB-技术栈
AutoRclone配合gclone突破GoogleTeamDrive750G流量限制 by 余十一 
可能是最简单的AutoRclone教程：如何突破Google Drive每日750G限制？ by Great Panoan
我在这里只记录一下重要的网址和一些代码
首先要安装python3,可以源码安装，也可以直接通过yum或者apt-get安装
然后安装autoclone
git clone https://github.com/xyou365/AutoRclone &amp;amp;&amp;amp; cd AutoRclone &amp;amp;&amp;amp; pip3 install -r requirements.txt 获取Python DriveApi 凭证
https://developers.google.com/drive/api/v3/quickstart/python
管理Google Group
https://groups.google.com/
查看ServiceAccount
https://console.cloud.google.com/projectselector2/iam-admin/serviceaccounts?pli=1&amp;amp;supportedpurview=project
基本上就上面这些东西，如果有不明白的可以到上面的那些链接里去问大佬，当然也可以发邮件给我，我尽力解答</description>
    </item>
    
    <item>
      <title>Surge-For-Mac模块 Q-Search 自定义搜索</title>
      <link>https://loyio.me/posts/q-search-surge-for-mac/</link>
      <pubDate>Wed, 06 May 2020 19:55:11 +0800</pubDate>
      
      <guid>https://loyio.me/posts/q-search-surge-for-mac/</guid>
      <description>昨天狠下心上了SurgeForMac的车，140永久，这是继Quantumult X后的又一次剁手，我也不知道自己怎么这么折腾，本来我Mac端用Clash用的好好的，没啥其它问题，可能是头脑一热吧，不过我今天就是想介绍一下，我重写的一款Surge模块，Q-Search
前言 在手机上用过Quantumult X和Surge的应该很熟悉这个插件，就是利用了重写的功能，实现自定义搜索命令，比如我想要在京东上搜索笔记本，我只需要在搜索栏输入 jd 笔记本 就可以了
然后回车，它会自动重定向至京东搜索页面，如下图所示
像这样的搜索命令还有很多，比如tb(在淘宝网搜索)，db（在豆瓣搜索）， 我这就不一一列举了，可以在我的源码中查询，里面都有注释
我根据大佬们的源码，自己改进了一些，并成功适配Mac端的Surge，而且做了桌面页面的匹配，Quantumult X原代码链接Github
Surge配置 下面我说下如何在自己的SurgeForMac中配置Q-Search
1.打开模块设置 首先打开Surge，在左面的菜单栏中选择设置，如下图所示，然后点击模块
然后我们进入下面的页面
2.安装模块 有两种方法安装模块，直接本地加载和从URL安装模块
第一种方法就是从github把模块下载下来，然后放到Surge默认配置路径中，注意后缀名称为.sgmodule
第二种方法，就是直接点击左下角的从URL安装模块，然后将 Q-Search 链接粘贴到文本框中，最后点击完成
3.启用模块 安装模块后，记得启用模块，就是把左边的选项框勾选即可，如下图所示
4.注意事项 请确保你已经进行了Mitm配置，是否安装证书且信任证书，并进行了主机名配置
使用模块之前 请先将Safari的默认搜索改为DuckDuckGo
使用模块 一般无指令的搜索，默认是进行Google搜索
想要知道所有指令，直接点击下面链接即可，基本上都有注释说明
https://raw.githubusercontent.com/loyio/SurgeMacModule/master/Q-Search.sgmodule
下面我们在mac端试验一下京东搜索指令，指令还是jd 笔记本
回车即可返回下面的搜索页面
如果有不明白的问题，可以邮件联系我</description>
    </item>
    
    <item>
      <title>pip安装模块时报错 ModuleNotFoundError:No module named &#39;_ctypes&#39;</title>
      <link>https://loyio.me/posts/pip-install-module-error-ctypes/</link>
      <pubDate>Wed, 06 May 2020 19:51:51 +0800</pubDate>
      
      <guid>https://loyio.me/posts/pip-install-module-error-ctypes/</guid>
      <description>最近一直在折腾GoogleDrive，用了rclone，又装AutoClone，最近又用上了gclone
在安装AutoClone依赖文件时报错
ERROR: Command errored out with exit status 1:  command: /usr/local/python3/bin/python3.8 -c &amp;#39;import sys, setuptools, tokenize; sys.argv[0] = &amp;#39;&amp;#34;&amp;#39;&amp;#34;&amp;#39;/tmp/pip-install-c6woj60b/progress/setup.py&amp;#39;&amp;#34;&amp;#39;&amp;#34;&amp;#39;; __file__=&amp;#39;&amp;#34;&amp;#39;&amp;#34;&amp;#39;/tmp/pip-install-c6woj60b/progress/setup.py&amp;#39;&amp;#34;&amp;#39;&amp;#34;&amp;#39;;f=getattr(tokenize, &amp;#39;&amp;#34;&amp;#39;&amp;#34;&amp;#39;open&amp;#39;&amp;#34;&amp;#39;&amp;#34;&amp;#39;, open)(__file__);code=f.read().replace(&amp;#39;&amp;#34;&amp;#39;&amp;#34;&amp;#39;\r\n&amp;#39;&amp;#34;&amp;#39;&amp;#34;&amp;#39;, &amp;#39;&amp;#34;&amp;#39;&amp;#34;&amp;#39;\n&amp;#39;&amp;#34;&amp;#39;&amp;#34;&amp;#39;);f.close();exec(compile(code, __file__, &amp;#39;&amp;#34;&amp;#39;&amp;#34;&amp;#39;exec&amp;#39;&amp;#34;&amp;#39;&amp;#34;&amp;#39;))&amp;#39; egg_info --egg-base pip-egg-info  cwd: /tmp/pip-install-c6woj60b/progress/  Complete output (11 lines):  Traceback (most recent call last):  File &amp;#34;&amp;lt;string&amp;gt;&amp;#34;, line 1, in &amp;lt;module&amp;gt;  File &amp;#34;/usr/local/python3/lib/python3.8/site-packages/setuptools/__init__.py&amp;#34;, line 20, in &amp;lt;module&amp;gt;  from setuptools.dist import Distribution, Feature  File &amp;#34;/usr/local/python3/lib/python3.8/site-packages/setuptools/dist.py&amp;#34;, line 35, in &amp;lt;module&amp;gt;  from setuptools import windows_support  File &amp;#34;/usr/local/python3/lib/python3.</description>
    </item>
    
    <item>
      <title>谈谈自己为什么又开始写博客了</title>
      <link>https://loyio.me/posts/why-me-rebuilt-blog/</link>
      <pubDate>Tue, 05 May 2020 19:48:37 +0800</pubDate>
      
      <guid>https://loyio.me/posts/why-me-rebuilt-blog/</guid>
      <description>其实我17年刚读大一的时候，就建立了自己的博客，那时候是用的阿里云的服务器，学生机9.9，然后域名好像是在godaddy买的吧，只不过当时为了备案又把这个域名迁移到了阿里云，国内主机配国外域名真的很鸡肋啊，当时godaddy还不允许前三个月迁移，所以前面一直用的临时域名。
一开始我用的是Wordpress，主题非常多，插件也很多，对于喜欢给自己的网站添加各种功能的人简直太友好了，我当时也用了一段时间，用户管理，插件各方面，都很不错，弄的自己网站五花八门，忽视了内容，而太过在意形式，有几次配置插件把自己的网站的内容都清除掉了，然后，还有一点就是，毕竟自己的服务器是9.9学生机，所以网站的访问速率也慢了很多。
后面又陆陆续续换了好几个博客程序，最后我还是决定了用zblog，因为这个博客的自由度还是挺高的，我可以修改底层代码，也可以自己写一些插件，虽然自己一定也不会PHP，但是看着别人代码一步一步改还是可以的，可惜，当时不知道我怎么就把这个网站全给删了，包括数据库，现在什么都没有了，不过博客的大部分内容我在博客园和 CSDN都有发布，上面的网站我都好久不发布了，想想当时的自己真的有点萌新感啊，最后一篇博客的时间刚好两年前的今天，实在是妙啊。
后面我堕落了很久，一直没在技术上有过突破，每天就是上上课，完成一下老师布置的任务，其余时间也不再专心于计算机科学这一门，主要原因是因为上面呢，我想是因为当时看了创造101吧，后面就开始追星了，到现在我还完全放不下，年轻人有时候对某一件事真的太执着了。
中间发生了什么我也不太清楚，这两年也不知道自己有什么成就，一直都是把18年写过的程序炒冷饭，然后参加一些比赛，也拿一些奖品或事奖金，或许吧，这就是没有进取心的自己吧，Bilibili的《后浪》我还没看过，这个年纪的自己最反感一些鸡汤，我还是继续做一颗微小的沙粒吧。
疫情期间，我在今天2.15后申请了自己的公众号，发现尽管自己的内心是颓废了很多，但热爱创作的那双手还是诚不欺我，一写起来就有吐不尽的废话，虽然文采黯然，但就是喜欢记录，就是喜欢发泄，只不过，后面不知怎地开始做起了所谓的营销号，每天从外网搬一篇文章到国内平台发布，然后赚几块钱流量费。
人总是易变的，而我是过于如此了，不谈太多了。
想着还是用github做一个静态博客算了，写写没人看的东西，发泄一下自己的内心，也记录一下，方便以后自己查询。</description>
    </item>
    
    <item>
      <title>Surge神机规则备份</title>
      <link>https://loyio.me/posts/surge-connershua-rules/</link>
      <pubDate>Tue, 05 May 2020 19:43:27 +0800</pubDate>
      
      <guid>https://loyio.me/posts/surge-connershua-rules/</guid>
      <description>原Surge配置文件地址
Surge3 Profiles
[General] # [高级设置] # 日志等级 loglevel = notify # 延迟测试（以下为默认值） # &amp;gt; Internet 测试 URL # internet-test-url = http://bing.com/ # &amp;gt; 代理测速 URL # proxy-test-url = http://bing.com/ # &amp;gt; 测速超时（秒） # test-timeout = 5 # IPv6 支持 ipv6 = false  # Wi-Fi 访问 # &amp;gt; 允许 Wi-Fi 访问（默认不启用） # allow-wifi-access = false # &amp;gt; HTTP 代理服务端口（默认为&amp;#34;6152&amp;#34;） # wifi-access-http-port = 6152 # &amp;gt; SOCKS5 代理服务端口（默认为&amp;#34;6153&amp;#34;） # wifi-access-socks5-port = 6153  # 外部控制器（默认不启用，以下为样例） # external-controller-access = DivineEngine@127.</description>
    </item>
    
    <item>
      <title>Loyio的书籍分享</title>
      <link>https://loyio.me/posts/books-share/</link>
      <pubDate>Tue, 05 May 2020 19:40:12 +0800</pubDate>
      
      <guid>https://loyio.me/posts/books-share/</guid>
      <description>还是和之前一样，做一个页面来分享一些书籍文件，方便大家查找，自己也做个记录。
我其实之前也是一个挺喜欢看书的人，静下心来，默默品读，也不知什么时候，突然我的生活进节奏加快了，后面我便不再这方面花费时间了，也买过很多实体书，为了不浪费自己的钱，还是坚持看完了，如今有时候也喜欢看一些技术类书籍，都是为了查阅资料
一年前买了kindle，看了没多久，就开始闲置了，几天不清理就全是灰，我这里其实也没啥能分享的，都是我从各个地方保存下来的，也算是当个参考吧。</description>
    </item>
    
    <item>
      <title>个人收藏的一些Mac软件（持续更新）</title>
      <link>https://loyio.me/posts/mac-app-sheet-link/</link>
      <pubDate>Mon, 04 May 2020 19:26:34 +0800</pubDate>
      
      <guid>https://loyio.me/posts/mac-app-sheet-link/</guid>
      <description>最近在找某些软件时，总是遇到很多问题，要么就是国内的下载付费（本来就是破解的），要么就是国外下载速度特别慢，因为大多是磁力链接，而且这些都是比较冷门的资源，所以下载速度特别慢，这里我声明一下，我收集的软件仅供学习交流使用，请大家到官方网站下载正版，付费支持。
这里我决定做一个页面，把自己收藏的软件分享出来，然后也分别做百度云和GoogleDrive链接🔗，也算是自己记录一下，方便自己以后找寻资料（再次声明，请大家支持正版）
这里百度网盘和GoogleDrive链接理论上是永久的，如果出现访问问题，可以通过邮件联系我，我会尽快回复，并更新链接
下面的软件我都安装试用过，也写了我个人觉得有用的功能
这是Number表格的链接， 国内应该可以访问的吧 iCloudeNumber （分享链接全部都放在里面了）
   软件名称 版本 描述     CleanMyMac X 4.6.2 用来清理一下磁盘用的，我最喜欢的功能就是可以清楚的知道你哪个文件夹占用了多少空间，这个对于我真的太有用了   Blue-ray Player Pro 3.3.18 可以打开播放蓝光盘文件，也就是iso结尾的视频文件，这个对于喜欢追求更高品质的电影原盘的人非常有用   BetterTouchTool 3.346 这个是用来配置自己的各种设备的，比如我之前用它来自定义我的MagicMouse2，设置各种手势，比如单指轻点   Folx 5.18(13943) 一个下载工具，可以通过浏览器插件做mac的默认下载工具，同时也支持种子和磁力下载，除此之外，还支持youtube下载，不过我一直加载不出    最后说一句，破解有风险，这些分享的基本上都是TNT团队破解的，如果觉得软件对你有用的话，请支持正版</description>
    </item>
    
    <item>
      <title>设置Hexo博客Next主题主页不显示全文</title>
      <link>https://loyio.me/posts/hexo-next-theme-nondisplay-fullpassage/</link>
      <pubDate>Mon, 04 May 2020 19:17:40 +0800</pubDate>
      
      <guid>https://loyio.me/posts/hexo-next-theme-nondisplay-fullpassage/</guid>
      <description>&lt;p&gt;使用Hexo配置自己的博客后，感觉很多方面都要轻松很多，一开始我是在Hexo Theme Page里面找到了一个比较好看的主题，奈何配置上之后，很多功能无法实现，且开发者好像也不再维护更新了，最终我还是决定使用Next博客，配置项的确是挺多的，所以功能也比较齐全，目前也有社区在维护更新&lt;/p&gt;
&lt;p&gt;Next博客的主页总是会将你的文章全文显示出来，这样可读性是比较差的，如果你文章特别长的话，对于加载也有一定的影响，另一方面，没有目录，访问者无法清楚的找出自己要得到的内容&lt;/p&gt;
&lt;p&gt;所以我觉得还是要设置一些，让主页不显示全文，&lt;/p&gt;
&lt;p&gt;Google了一下，发现解决方法就是打开主题下的配置文件，将下面的enable改为true就可以了&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;auto_excerpt&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;enable&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;false&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;奈何我在配置文件中根本就没找到这个关键词，可能是主题配置重写了吧，下面说说我的解决步骤&lt;/p&gt;
&lt;p&gt;打开&lt;code&gt;themes/next&lt;/code&gt; 目录下的 &lt;code&gt;config.yml&lt;/code&gt; ，查看摘要描述是否为true，默认是开启的&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Automatically excerpt description in homepage as preamble text.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;excerpt_description&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;然后你有两种方法，让你文章在首页只显示部分&lt;/p&gt;
&lt;h4 id=&#34;1写概述&#34;&gt;1.写概述&lt;/h4&gt;
&lt;p&gt;在文章的最上面 &lt;code&gt;front-matter&lt;/code&gt; 中添加 &lt;code&gt;description&lt;/code&gt;,&lt;/p&gt;
&lt;p&gt;然后在冒号后面写你这篇文章的概述，配置完成后，你的主页就只会显示这篇文章的&lt;code&gt;description&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;title: 文章标题
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;date: 2020-05-04 13:07:04
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;description: 首页的概述，正文内容不会显示
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;2截断文章&#34;&gt;2.截断文章&lt;/h4&gt;
&lt;p&gt;在需要截断的地方加入&lt;/p&gt;
&lt;p&gt;`&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Hexo博客SEO优化，将你的网站提交到搜索引擎</title>
      <link>https://loyio.me/posts/hexo-blog-seo/</link>
      <pubDate>Mon, 04 May 2020 19:10:17 +0800</pubDate>
      
      <guid>https://loyio.me/posts/hexo-blog-seo/</guid>
      <description>1.什么是SEO SEO（Search Engine Optimization）顾名思义就是搜索引擎优化，比如你想让别人在百度、google搜索某些内容时，刚好可以出现自己网站的链接，简单来说，就是提高你个人网站的流量。虽然我这人本来就没想过要什么流量，主要目的是想记录一些东西，给自己看的，但是，如果自己的博客能够帮助到别人解决问题，我感觉还是挺值得的。我下面介绍的都是Hexo静态网站博客相关的
2.站点地图 也就是sitemap，站点地图可以告诉搜索引擎自己的网站有哪些可以抓取的内容，可以帮助搜索引擎更智能地抓取网站各个分支内容
1⃣️ 生成站点地图 首先要安装百度和谷歌（Google）的站点地图生成插件
npm install hexo-generator-baidu-sitemap --save npm install hexo-generator-sitemap --save 2⃣️ 修改配置文件 打开博客主目录的config.yml文件，添加下面的sitemap配置内容
# 生成博客sitemap sitemap:  path: sitemap.xml baidusitemap:  path: baidusitemap.xml 3⃣️ 生成页面并部署到服务器 这个直接使用一键命令就可以了
hexo g -d 可以看到自己的public目录已经有下面两个文件了
3.百度站长平台 1⃣️ 添加网站 首先你要打开下面的网站
https://ziyuan.baidu.com/
然后登录你的账号，好像直接用百度账号就可以了，进入控制台，页面如下
点击下面的添加网站
根据步骤，选择站点属性，然后开始验证网站
我在这里选择的是文件验证，下载验证文件，然后把它放到你的网站根目录的source文件夹下，然后执行生成部署命令
hexo clean hexo g -d 然后点击完成验证就可以了 (❗如果验证失败，建议先生成页面，然后将文件放到public文件夹中，然后再部署到服务器)
2⃣️ 链接提交 我们在这里讲一下自动提交方法，手动提交按照要求在括号内填入链接即可
自动提交也有三种选项，主动推送、自动推送以及sitemap
1.主动推送 我们要用到hexo的插件，输入命令安装即可
npm install hexo-baidu-url-submit --save 然后在_config.yml文件添加以下内容
baidu_url_submit:  count: 5 ## 提交最新的五个链接  host: blog.</description>
    </item>
    
    <item>
      <title>Quantumult X 相关配置问题</title>
      <link>https://loyio.me/posts/quantumnltx-config/</link>
      <pubDate>Sun, 03 May 2020 18:43:06 +0800</pubDate>
      
      <guid>https://loyio.me/posts/quantumnltx-config/</guid>
      <description>之前一直用的是Shadowrocket（俗称小火箭，用了快一年多了吧，感情还是挺深的），配置起来的确要简单很多，但功能也自然谈不上丰富，今天看自己的印度Apple ID里面还有800卢比，想着放里面也是无用，不如花了痛快，于是就果断买了Quantumult x（好像大家常把它叫做圈X）。
1.购买之前 刚开始搜的时候出现了两个软件，Quantumult 和 Quantumult x，订阅价格差了20人民币左右，于是又在网上了解这两者的区别，总结来说，就是UI不一样，然后Quantumult x支持强大的JS脚本功能，对于喜欢瞎折腾的我当然是选择第二个完整版
2.寻找教程 在网上搜索了一下，进了非官方Tg群，这里有两个配置教程
Quantumult 完整教程: https://github.com/shigalin/Quantumult/blob/master/README.md
QuantumultX 用户教程: https://www.notion.so/kopshawn/Quantumult-X-1d32ddc6e61c4892ad2ec5ea47f00917
第一个相对比较简单，第二个就是进阶的操作了，不过这两个我都没怎么看
我打开了 https://merlinblog.xyz/wiki/quanx.html 这个网站，这个写的还是挺不错的，配置起来基本没啥难度
最关键的网站出来了https://github.com/nzw9314/QuantumultX/tree/master 这个基本上包含了圈X的所有配置和脚本，而且还附有视频讲解，目前也一直在维护
3.开始配置 具体过程我就不写了，上面的教程写的很清楚，我在这里只说几点我遇到的问题
自从去年GFW开始加大对ssr的封锁，我当时立即就决定用上给自己的服务器配置上trojan，用到现在也快有五六个月了吧，很久没用过ssr了，也很久没买过机场了，之前一直白嫖谷歌云，后面才开始买阿里云国际的3.5美元套餐，虽然各种服务比不上机场，但感觉用自己搭建的总是安全私密一点（可能是自己的心理作用吧）
好吧，回到正题，刚开始用圈X的时候我是懵逼的，这东西为什么不像小火煎那样，直接选择要连接的类型，然后在文本框中输入配置就算成功了，
当然圈X也可以直接输入配置信息进行配置，不过只支持ss，先要用其它的协议，只能去编辑配置源文件，按照Quantumult X的示例文件中添加即可，就改几个参数而已
下面是trojan的配置，将example.com改成你自己的trojan域名，pwd改成自己的密码就可以了
trojan=example.com:443, password=pwd, over-tls=true, tls-verification=true, fast-open=false, udp-relay=false, tag=trojan-tls-01 界面其实还挺好看的
其实到这一步，基本上代理的功能就完成了，也就是小火箭的功能
4.高级配置 在Quantumult X中有一个功能叫做重写，其实有点像我们在浏览器用到的js插件，也就是在页面中注入一些其它信息，比如逛京东时，可以看历史最低价
看netflix时，可以看这个节目在IMDB和豆瓣的评分
个人感觉是要方便很多
另一个高级一点的功能就是定时任务，执行js脚本，这个我觉得也挺有用的，比如各种签到任务啊，用Quantumult X的一个比较突出的一个特点就是获取cookie方便多了，不像我搞个签到网站，还要各种抓包，最后还不一定能成功，这里我不过多赘述了，再次贴上项目合集的网址
https://github.com/nzw9314/QuantumultX/tree/master</description>
    </item>
    
    <item>
      <title>Apple Arcade 游戏评测</title>
      <link>https://loyio.me/posts/arcade-game-record/</link>
      <pubDate>Fri, 01 May 2020 17:55:10 +0800</pubDate>
      
      <guid>https://loyio.me/posts/arcade-game-record/</guid>
      <description>开通了Apple的游戏订阅服务，里面虽然游戏很多，但其实很多游戏是比较适合小孩子玩的，目前我个人觉得能玩的游戏有Oceanhorn2，Spyder，Tint等，这里我决定将Arcade中的每个游戏都试玩一下，写一下自己的个人感受。
往右滑动表格，查看更多信息
   图标 游戏名称 游戏类别 推荐指数 主要任务 链接🔗 个人感觉      Oceanhorn2 冒险类 ⭐️⭐️⭐️⭐️⭐️ 做一个优秀的骑士完成各种任务、探险⚔️🛡 App Store 任务剧情都挺喜欢的    Spyder 冒险类 ⭐️⭐️⭐️⭐️⭐️ 控制机器蜘蛛完成各种繁琐的任务，拯救生命🕷️ App Store 已通关、总共六关    Frogger 动作类 ⭐️⭐️ 操作青蛙，拯救小青蛙🐸 App Store 感觉有点低智，想不懂苹果发布会当时为什么选他演示，适合小朋友玩吧    WHAT THE GOLF? 休闲类 ⭐️⭐️⭐️⭐️ 将各种物体击中目标，会有很多彩蛋，此游戏并不会教你打高尔夫 App Store 这个我发现有点晚，后面玩了才发现是真的好玩，太有趣了。    Skate City 动作类 ⭐️⭐️⭐️ 通过不同的操作完成各种花样滑板技能🛹 App Store 背景音乐以及滑板各种花式操作，但操作难度太大                      https://www.</description>
    </item>
    
    <item>
      <title>使用谷歌云搭建google drive离线下载服务器</title>
      <link>https://loyio.me/posts/gcp-create-gdrive-download-server/</link>
      <pubDate>Tue, 28 Apr 2020 11:43:18 +0800</pubDate>
      
      <guid>https://loyio.me/posts/gcp-create-gdrive-download-server/</guid>
      <description>1.在google云中创建一个实例 选择可用的地区，这里我选择的是新加坡，然后下面服务器配置选择Micro，允许http和https访问，最后点击创建，等待一会儿，点击右侧ssh连接服务器终端
2.安装rclone 我们使用官方的脚本进行安装
首先我们需要安装解压工具
yum -y install unzip 然后使用官方提供的命令
curl https://rclone.org/install.sh | sudo bash 稍等一会儿就安装成功了
3.配置rclone 安装完成后，我们在命令行输入以下代码
rclone config 下面就开始进行配置操作
首先是创建一个新连接
n/s/q&amp;gt; n 输入名称(自己随便输入)
name&amp;gt; gdShare 然后下面类型输入drive
Storage&amp;gt; drive 后面两步都直接回车，不输入
client_id&amp;gt; client_secret&amp;gt; 下一步选择第一个选项
scope&amp;gt; 1 再后面两步也是直接回车不输入
root_folder_id&amp;gt; service_account_file&amp;gt; 是否编辑预先配置，我们选择No
y/n&amp;gt; n 使用自动配置我们这里也是选择No
y/n&amp;gt; n 这时候会出来一段链接，点击直接打开或者复制用浏览器打开都可以，打开后，这里会要你登录你想挂载的google drive的账号，授权选择允许后会生成一个代码，将代码复制到下面的选项中就可以了
Enter verification code&amp;gt; 【生成的代码】 然后会让你选择是否是团队账号，这里我们默认选择No
y/n&amp;gt; n 然后下一步我们选择yes完成创建
y/e/d&amp;gt; y 然后可以看到我们创建的项目了
最后输入q退出配置
e/n/d/r/c/s/q&amp;gt; q 4.挂载磁盘 创建一个文件夹来挂载磁盘
mkdir /mnt/googledrive 在挂载之前，我们要先安装fuse文件系统
yum -y install fuse 然后输入挂载命令</description>
    </item>
    
    
    
  </channel>
</rss>
