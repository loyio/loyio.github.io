<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Posts on Loyio&#39;s Blogs</title>
    <link>https://loyio.me/posts/</link>
    <description>Recent content in Posts on Loyio&#39;s Blogs</description>
    <image>
      <url>https://loyio.me/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</url>
      <link>https://loyio.me/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Sat, 17 Sep 2022 22:08:16 +0800</lastBuildDate><atom:link href="https://loyio.me/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>养成每天阅读的习惯 - 对于自己的告诫</title>
      <link>https://loyio.me/posts/just-reading-every-day/</link>
      <pubDate>Sat, 17 Sep 2022 22:08:16 +0800</pubDate>
      
      <guid>https://loyio.me/posts/just-reading-every-day/</guid>
      <description>周三部门leader给开了个培训会，然后会前搞了个分组小游戏，也算是加强部门中不同组之间的交流。
正常上班人与人之间的交集还是比较少的，同公司不同部门基本上不会有交集，当然我作为中台部门，自然跟项目组会有打交道的时候。
同部门不同组基本上不认识，这在中台部门应该是比较常见的，每个组涉及到的项目天差地别，很难有共同话题。再说，组内基本上也都是抱团取暖，能有一个知心朋友我觉的就很不错了，组内大多都是工作上的交流。
前面扯了一下工作人际关系，有些偏题了，leader在会上其实分享了很多，一个很重要的主题就是告诉我们要坚持，所有困难都是正常的。通过讲述自己的故事来给我们“提高自信“,当然大家都知道故事稍微会有一点润色。实际上，就拿我本人来说，差距太大了。不论是学历上、技术水平上、个人意志上是完全够不上大佬们的。从这两三个月的职场中来看，我就是一个不思进取、只会摆烂、甘心躺平的无志青年。需要不停反思，才能把自己给骂醒。
职场中来看，最重要的三点也就是我们的考核标准，结果、协作、学习。不管什么行业都离不开这三点。比较深入的来说，我最看重的是效率。没有效率，一切都是白费的，最终这三点也都没有了意义。
想着去改变、去拼，首先还是得从学习开始，需要培养自己的兴趣，这样才不至于阅读的时候总想打瞌睡。所以还是得提高自己目前技术栈的兴趣，然后强迫自己去接受新的知识。才能保证自己不被淘汰。
就喜欢瞎写一些没有逻辑的话。以后再增删改吧。</description>
    </item>
    
    <item>
      <title>学习OpenGL - 摄像机</title>
      <link>https://loyio.me/posts/learn-opengl-camera-system/</link>
      <pubDate>Tue, 13 Sep 2022 22:31:31 +0800</pubDate>
      
      <guid>https://loyio.me/posts/learn-opengl-camera-system/</guid>
      <description>LookAt via GIPHY
自由移动 via GIPHY
鼠标输入 via GIPHY</description>
    </item>
    
    <item>
      <title>学习OpenGL - 坐标系统</title>
      <link>https://loyio.me/posts/learn-opengl-coordinate-systems/</link>
      <pubDate>Sat, 10 Sep 2022 18:57:03 +0800</pubDate>
      
      <guid>https://loyio.me/posts/learn-opengl-coordinate-systems/</guid>
      <description>进入3D 更加3D 非常奇怪的立方体，没有加Z-buffer
加了Z-buffer之后，一个正常的立方体
添加更多的立方体 </description>
    </item>
    
    <item>
      <title>学习OpenGL简单的变换</title>
      <link>https://loyio.me/posts/learn-opengl-transformations/</link>
      <pubDate>Sat, 10 Sep 2022 17:57:42 +0800</pubDate>
      
      <guid>https://loyio.me/posts/learn-opengl-transformations/</guid>
      <description>简单的旋转与缩小
这里更改了Y轴的方向，变成了向右侧旋转
TexCoord = vec2(aTexCoord.x, 1 - aTexCoord.y); 随时间旋转</description>
    </item>
    
    <item>
      <title>学习OpenGL纹理</title>
      <link>https://loyio.me/posts/learn-opengl-learn-texture/</link>
      <pubDate>Tue, 06 Sep 2022 22:51:54 +0800</pubDate>
      
      <guid>https://loyio.me/posts/learn-opengl-learn-texture/</guid>
      <description>应用纹理 纹理颜色与顶点颜色混合 纹理单元 翻转Y轴 </description>
    </item>
    
    <item>
      <title>学习着色器Shader - GLSL</title>
      <link>https://loyio.me/posts/learn-opengl-learn-glsl/</link>
      <pubDate>Mon, 05 Sep 2022 22:23:33 +0800</pubDate>
      
      <guid>https://loyio.me/posts/learn-opengl-learn-glsl/</guid>
      <description>输入与输出 Uniform（随时间变化） 更多属性 然后就是Shader类，这个最后我生成的如上所示
因为需要读取shader文件，这里不想使用绝对路径的，可以自己设置一下Xcode的Working Directory
在Product-&amp;gt;Scheme-&amp;gt;Edit Scheme，下面是我的设置。根据你自己的项目所在路径进行设置。</description>
    </item>
    
    <item>
      <title>Learn OpenGL - Hello Triangle (M1Pro 环境环境配置)</title>
      <link>https://loyio.me/posts/learn-opengl-hello-triangle/</link>
      <pubDate>Sun, 04 Sep 2022 15:20:21 +0800</pubDate>
      
      <guid>https://loyio.me/posts/learn-opengl-hello-triangle/</guid>
      <description>虽然说苹果之前已经说弃用OpenGL了，全部改用Metal，但目前还是自带OpenGL库的
首先开始是环境的配置，我这里直接放弃了使用CMake，又重新把Xcode装了回来。
首先安装glfw,glew
brew install glfw brew install glew 然后使用brew info ***就可以查看安装的具体路径在哪里，后续需要用到
然后是glad，进入网站gl我选择的是3.3，然后Profile设置为Core，下面注意是否勾选了Generate a loader，然后生成即可，然后我把下载下来的include里面的文件夹放到了/usr/local/include这个目录，后续也需要用到。
打开Xcode，新建一个C++命令行项目，在target项目设置哪里，选择Build Settings找到Header Search Paths（在Search Paths下面），添加两个路径，一个就是homebrew的头文件的路径，另一个就是local的头文件路径,以下仅供参考
/opt/homebrew/include /usr/local/include 然后在进入Build Phase，开始配置链接库，如下图所示
上面两个的路径就是homebrew安装库的路径，这些dylib文件就在这个文件夹下面，我上面截图用红框框住的。下面两个就是自带的直接选就行了
然后记得把之前glad生成文件src下面的glad.c文件复制进来。
注意事项 Mac 苹果芯片环境，需要注意下面几点，首先在申明的时候，需要设置GLFW_OPENGL_FORWARD_COMPAT,教程里面也说了
#ifdef __APPLE__ glfwWindowHint(GLFW_OPENGL_FORWARD_COMPAT, GL_TRUE); #endif 然后就是在创建窗口之后需要再加上这么一行
#ifdef __APPLE__ glfwMakeContextCurrent(window); #endif 然后还有就是可能会报这么一个错
需要禁止Library的验证，如果没有Hardened Runtime这个，点击左上角的+ Capability即可
当改完之后，可能还会报这么一个错
这时候选择执行Product下面的Clean Build Folder就可以了
效果展示 三角形 矩形 矩形(线框模式) 更多顶点 </description>
    </item>
    
    <item>
      <title>直面差距，虚心求教 --- 流水账</title>
      <link>https://loyio.me/posts/find-the-gap-go-on/</link>
      <pubDate>Sat, 03 Sep 2022 15:28:21 +0800</pubDate>
      
      <guid>https://loyio.me/posts/find-the-gap-go-on/</guid>
      <description>工作两个月了，基本没有时间去停下来好好思考一下目前的一个状态，以及之后的一个规划。
这周五在组长那里学到了很多，聊了也差不多一个小时，基本上我是一个啥也不会的状态，组长也在不停的迁就我，引导我如何去学习。
想想如果还是这样的状态，必定走不远。也是时候认真起来了。
第一个月 本人就是一个非常普通的人，来自普通的学校，能力也很普通，误打误撞进了公司，然后接触了自己并不是很熟悉的行业，组里的规划还是很清晰的，一开始就是让做一个小项目，穿插着进行一些学习计划。但基本上工作日能用来学习的时间我根本挤不出来。我总是太专注于某一件事，而不想着从多个方面去提升自己。
导师还是非常负责的，从一开始做需求分析、项目设计文档的时候，就是改了一版又一版，本以为软件工程的知识以后用到的情况会很少，程序员就蒙头写代码就行了，然而实际上文档必不可少，一开始，我连鲁棒图是啥都不记得了，设计模式该如何正确选择也摸不清头脑。还是导师一步一步带我重新回顾需求分析与设计的核心，还学到了一个重点，就是这一切的一切都是为了让自己不背锅。
我之前的想法基本上都是走一步看一步，不会关注于规划上，程序开发中，只是会在开始时想一下要做一个什么样的效果，而对于设计，总是迷茫的，遇到一个问题解决一个问题。这或许也就跟我的大学生活是一样的，总是看到什么觉得挺感兴趣的，然后就会在之后一段时间里去做这件事。从一开始的前端框架，再到Java, .NET，然后到是Python语言，逐渐接触到机器学习知识，后面又学了Swift做iOS、Mac应用，再到最后又回归本心，用C++刷算法题，重新喜欢上使用C++，当前中间也不知道经历过多少个其他的想法，参加过微信小程序比赛、设计过CPU MIPS流水线、试着自己从零写一个操作系统等。当然很多都是浅尝辄止。（当然我指的这些不是说大学专业课程的那些要求）
这样也就导致啥都接触过一点，会一点，但一直没找到自己真的擅长的、喜欢做的。我这没有规划的人生就如shit一般。虽然可能在我的一些同学中，他们都会觉得我怎么啥都会，但实际上人生如戏，我只是扮演着这么一个角色。
回到工作上，开发的过程中，实际上也越到过很多问题，我的导师是要求我必须每天开发出来其中一个部分，然后给他测试，实际上，我根本没法在一开始就考虑所有情况，往往是一部分还没有非常完善就转向下一部分，这与我导师的想法是背道而驰，做一个功能就一定要把这个功能做到极致，完美贴合需求。而我是想着是在开发过程中，开发当前模块时，也不断的完善之前的模块，思考之后的模块。我的很多观念，有时候我自己也找不出原因，而我又是一个极端固执的人，这个习惯必须得改。
跳到最后，导师检查的时候，我发现我的导师对我的要求总是要比其他新入职的员工高，同时这也是一个导师考核制度，需要导师打分，明明大家都不需要完成的一个需求，到我这就变成了一个考核项，导师测试的时候，遇到一个bug，然后就会打回去让我改，改完之后才继续进行测试。这样的效率是非常低的，本来一个一天就能测完的，大概又要花一两周。不过听他说这是在给我机会，测出来的bug越多，自然分数就越低。所以自测必须要非常仔细，然而我的导师总是有非常多新颖的测试用例。
我也与导师争论过，当时一个需求，我觉得就很奇怪，我也问了其他同期入职做新人项目的，他们都没这要求，然而让我必须完成这个，不然又要扣分，当时想着，这种机制很不公平，想要报告给组长，不过这种行为实在太幼稚了，我想想都觉得好天真啊。每个导师都有自己的一个想法，有自己的一套理念，各有各的好处吧。就这样吧，关于这个新人项目就讲到这里。
正式接触工作 一开始都是一些修改bug的任务，分析需求，从代码中找出出现问题的地方，然后进行修改。后续又做了一个工具，本以为能够很快的做出来，然而对于框架不太熟悉，也花了一段时间。</description>
    </item>
    
    <item>
      <title>Aftership后端校招春招笔试</title>
      <link>https://loyio.me/posts/aftership-campus-backend-exam/</link>
      <pubDate>Thu, 24 Mar 2022 21:34:41 +0800</pubDate>
      
      <guid>https://loyio.me/posts/aftership-campus-backend-exam/</guid>
      <description>投了Aftership的后端开发，进了笔试，发了一个链接，是可以任意时间开发做的，只要在五天之内就行。
昨天下午空闲的时候做的。
选择题 首先是30道选择题，考的基础知识都挺扎实的，我感觉都是牛客上的原题吧。有五六道题不会吧。
算法题 然后是两道算法题，
第一道算法题送分题，判断两棵二叉树是否相同，就是一个遍历，同时对比结点的值，只要有不同就返回false。
第二道题输入是给了一个字符串，由数字组成，用空格隔开，比如&amp;quot;12 34 234 23 66&amp;quot;, 给了这么一个概念，数字的权重是数字的各位相加得到的值，比如99的权重是18。
需要计算字符串中每个数字的权重，然后在字符串找到符合下面条件的两个数字
两个数字权重的差最小 然后数字的权重也要最小 数字的下标也要最小，下标是从0开始 然后就是输出，两个数字组成的数组，子数组的格式如下
[权重，下标，数字值]
然后子数组也要有顺序，首先按权重，如果权重相同，那么就按索引，都是升序的。
好像输出的时候也是要求必须是字符串，大致格式如下，具体我也不太记得了
&amp;quot;[[10, 1, 143][10, 6, 88]]&amp;quot;
我的做题思路是，首先因为都是字符串，肯定得先把字符串中解析成一个整数数组，然后应该就是动态规划了，从前往后，选择最优的两个数字。
结果 今天早上的时候就收到了感谢信，Aftership效率还是挺高的。
可能是没有HC了吧，然后我看后端主要也是用Golang，今天打开官网，发现就只招算法工程师了</description>
    </item>
    
    <item>
      <title>小红书后端开发春招笔试</title>
      <link>https://loyio.me/posts/red-campus-first-exam/</link>
      <pubDate>Sun, 13 Mar 2022 20:56:10 +0800</pubDate>
      
      <guid>https://loyio.me/posts/red-campus-first-exam/</guid>
      <description>选择题 数据库事务的四大特性
事务的四大特性主要是：原子性（Atomicity）、一致性（Consistency）、隔离性（Isolation）、持久性（Durability）。
产生死锁的四个必要条件
互斥条件、不剥夺条件、请求并保持条件、循环等待条件
给你一个入栈序列，问有多少种出栈可能
卡特兰数，如有$n$ 个入栈，那么出栈有 $\frac{1}{n+1}C_{2n}^{n} = C_{2n}^{n}-C_{2n}^{n+1}$ 种可能，1, 1, 2, 5, 14, 42, 132, 429, 1430, 4862, 16796, 58786, &amp;hellip;
楼梯有9个台阶，每次只能走1个或2个台阶，有多少种走法。
斐波那契数列，1, 2, 3, 5, 8, 13, 21, 34, 55
算法题 给你一个由0和1组成的数组，你可以有一次翻转区间的机会，即将1变成0，将0变成1，问此数组中1最多能有多少个。 给你一张 $M \times N $的地图，然后还会有 $K$ 个障碍（障碍坐标已给出），每次只能向右或者向下移动，从地图的左上角到达地图的右下角，问一共有多少种走法。 最大礼物价值。 </description>
    </item>
    
    <item>
      <title>使用差分数组解决leetcode798题:得分最高的最小轮调问题</title>
      <link>https://loyio.me/posts/smallest-rotation-with-highest-score/</link>
      <pubDate>Wed, 09 Mar 2022 09:48:43 +0800</pubDate>
      
      <guid>https://loyio.me/posts/smallest-rotation-with-highest-score/</guid>
      <description>题目描述的链接如下：
得分最高的最小轮调
首先，刚拿到这道题我首先想到的当然是暴力解法，循环每一个$k$，计算得分，然后得分最大的$k$，即为所求，很明显，这种方法，肯定会导致TLE（Time Limit Exceed）。没想到方法的我，自然就是去看官方的题解。
首先，是这个题目的两个关键题眼：
是怎么轮调的，$n$ 为数组的长度，$k$ 为数组中的一个下标（index），轮调完后，$k$ 到数组的最后一个元素$(k, n-1)$ 这段区间会移动到原数组的最前面，然后就是$k$前面的那一段（顺序不变）$(0,k-1)$，会附加到后面来。 然后就是记分，任何值小于或等于其索引的项都可以记作一分，也就是说，如果索引值为 $i$ ,然后 $nums[i]=x$ , 当 $x = nums[i] \le i$ 时可以记一分。也可以反过来理解，当索引值大于等于当前值的时候可以记一分，即 $i \ge nums[i] = x$ 记一分。 数组 $nums$ 中的一个元素 $x$ ，只有当 $x$ 所在下标范围为 $[x, n-1]$ 时，才会记一分，当 $x$ 下标为 $[0, x-1]$ 时不记分。
假设元素 $x$ 的当前下标为 $i$ ，如果轮调下标为 $k$ , 那么 $x$ 经过轮调过后的下标就为 $(n-k+i) \bmod n$ （或者写为 $(i-k+n) \bmod n$ ），这里最后为什么要取$n$的模，是防止超过数组范围，而如果元素 $x$ 要记一分，那么它的下标就应该是 $(n-k+i) \bmod n \ge x$ ，等价于 $ (n+i-x) \bmod n \ge k$ ，又因为元素 $x$ 记一分的下标有 $n-x$个，所以说，我们可以得到 $k \ge (i+1) \bmod n$ , 因为 $k$ 的的位置总是被移动到下标为0的地方，$k$ 的前一个值总是被移动到 $n-1$ 的位置，也就是不管怎么算都是符合条件(当前下标值大于等于当前值)的位置。</description>
    </item>
    
    <item>
      <title>在Mac上如何找到hosts文件</title>
      <link>https://loyio.me/posts/how-to-find-hosts-file-on-my-mac/</link>
      <pubDate>Mon, 07 Mar 2022 22:04:20 +0800</pubDate>
      
      <guid>https://loyio.me/posts/how-to-find-hosts-file-on-my-mac/</guid>
      <description>Hosts 文件是更改您的计算机查看特定网站的方式的重要工具。虽然大多数用户永远不需要更改其 Hosts 文件，但 Web 开发人员或用户可能需要修改文件以查看仍在开发中的新站点。
要使您的计算机显示您的测试网站而不是实时站点，您必须将测试站点的 IP 地址以及域名添加到 Hosts 文件中。只要该信息包含在您的主机文件中，您的浏览器就会重定向请求以显示指定 IP 地址上的站点。这使我们能够在不修改生产站点的 DNS 的情况下测试功能。
找到Mac上的Hosts文件 首先打开终端，可以是自带的terminal，也可以是其他的（比如iterm2）
为了照顾到所有用户，我们再这里使用自带的terminal，选择Go-&amp;gt;Utilities，点击打开
找到terminal，双击打开
然后，输入下面的命令
sudo vim /etc/hosts 如果没有vim，可以通过brew安装vim（参考文章安装brew 如何使用强大的软件包管理器Homebrew）
打开后如图所示
vim的操作请上网自行搜索
移动到底部，新建一行，左侧为ip地址，右侧为域名，更改完后如下图所示(仅做示范)
最后wq保存即可</description>
    </item>
    
    <item>
      <title>如何使用强大的软件包管理器Homebrew</title>
      <link>https://loyio.me/posts/how-to-use-brew/</link>
      <pubDate>Mon, 07 Mar 2022 17:25:24 +0800</pubDate>
      
      <guid>https://loyio.me/posts/how-to-use-brew/</guid>
      <description>安装Homebrew 打开官网 brew.sh ，首先印入眼帘的就是 Install Homebrew
打开Mac上的Terminal或者其他的终端软件（iTerm），将下面的命令复制到里面，然后回车，就可以了。
/bin/bash -c &amp;#34;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)&amp;#34; Formulae和Cask Formulae Homebrew作为一个软件包管理器，一开始是Red-hat的Yum，和Ubuntu的apt-get等Linux上的包管理器在Mac平台的第三方替代品，用于安装与卸载软件，当然也包括自动处理依赖。
这也是Homebrew的核心功能，homebrew-core ,也就是Formulae，通过homebrew，我们可以轻松的安装CLI软件（大多都是开源软件），而不用去考虑依赖，当然它也支持本地编译，也就是说我没也不用考虑系统的版本，或者处理器是arm还是x86的，也就是在本地执行的 Build From Source 。
Cask Homebrew Cask 作为homebrew 的扩展，主要是用来安装一些GUI图形软件，或者大型的二进制软件。这些软件各色各样，简单来说是命令行版的App Store，当然不能在App Store上架的软件是占多数的，他可以说是大大简化了用户在安装软件时的操作，比如我们需要安装微信。正常来说，我们有两种操作。
在App Store中搜索微信，点击安装，然后等着它慢慢转圈。
打开微信官网 https://weixin.qq.com ，选择系统，然后下载。下载玩后，点开安装文件dmg，再将其拖到Applications文件夹
很显然，上面的操作非常麻烦，或许你会说，直接用App Store很简单啊，当然如果你能忍耐点击Get，然后点击Install，然后又要输入你的Apple ID账号密码（有时候直接用指纹就行），其实也没啥麻烦的。
事实上很多在Mac App Store中上架的软件都是阉割版，沙盒化运行的。很多功能都需要经过Apple的审核才能上线，某些情况下官网中的版本功能是比较全面的，另一方面，大部分软件，你在Mac App Store上是搜不到，很多开发者也并没有要支付100美元一年的打算。就比如Chrome浏览器。你还是得去官网下载的。
前面啰嗦了很多，下面我们来看一下利用homebrew安装微信需要的操作。
打开终端 输入brew install wechat 回车，等待下载安装，然后你的程序坞（Launchpad）中就有了微信 当然，有时候你会问，我怎么知道微信是wechat。一开始的确是很难记得这些的，你需要打开brew.sh ，搜索一下
两者区别 记得之前的版本安装Fomulae和Cask是有不同的
安装Formulae
brew install &amp;lt;software-name&amp;gt; 安装Cask
brew install --cask &amp;lt;software-name&amp;gt; 然后现在的版本，应该是解决了cask和formulae的冲突问题，统一用
brew install &amp;lt;software-name&amp;gt; 就行了
安装与卸载 在前面有提及过如何使用brew安装软件
我在这里说一下，我安装软件一般是怎么操作的。
安装 官网搜索 对于国内的软件，如果不记得name，我都是需要去官网用中文搜索一下的，比如爱奇艺</description>
    </item>
    
    <item>
      <title>在Mac(M1 Pro)上通过源码编译Fritzing最新版本</title>
      <link>https://loyio.me/posts/build-fritzing-from-source/</link>
      <pubDate>Mon, 07 Mar 2022 16:50:39 +0800</pubDate>
      
      <guid>https://loyio.me/posts/build-fritzing-from-source/</guid>
      <description>因为要设计一下硬件的走线，在Arduino Forum上看到大家都是用的Fritzing，于是便也想着下载安装使用，打开官网，只看到 Pay &amp;amp; Download, 上面有着两个单选框（必选），一个是8欧元和25欧元。
显然第一次使用，我是舍不得这些钱的，便想着搜索Cracked Version， 未果，返回到官网，发现原来这个软件在Github是开源的，主要用Qt，便想着尝试自己编译一下。
1.获取源代码 主程序代码库
git clone https://github.com/fritzing/fritzing-app.git 以及一些其他组件
git clone https://github.com/fritzing/fritzing-parts.git 2.下载安装Qt 根据官方文档现在最新用到的Qt版本是5.15.2，为了方便起见，我直接通过Brew安装Qt5，至于如何安装和使用brew，请看我的这篇文章如何使用强大的软件包管理器Homebrew
brew install qt5 然后官方是建议安装Qt Creator，但我在后面看到Mac可以直接使用Xcode编译，刚好自己电脑上有Xcode，于是便想着先不安装Qt Creator。（首先申明未成功，可能环境不同）
使用Qt和Xcode构建Fritzing 下载安装Xcode，如果已经安装了，进入下一步。
完成之前的准备工作
使用 QT bin 文件夹中的软件工具 qmake。cd到您的 Fritzing 代码文件夹并执行以下操作：
cd /Users/you/Documents/fritzing-app qmake -spec macx-xcode 构建成功后，打开 Fritzing.xcodeproj.
从构建菜单项中选择 Build and go.
我在第三步就卡了，最后报错
objc[8754]: Class AMSupportURLConnectionDelegate is implemented in both /usr/lib/libamsupport.dylib (0x1fd9a3678) and /Library/Apple/System/Library/PrivateFrameworks/MobileDevice.framework/Versions/A/MobileDevice (0x107f282c8). One of the two will be used. Which one is undefined.</description>
    </item>
    
    <item>
      <title>Leetcode个人刷题记录</title>
      <link>https://loyio.me/posts/leetcode-record/</link>
      <pubDate>Wed, 02 Mar 2022 17:19:04 +0800</pubDate>
      
      <guid>https://loyio.me/posts/leetcode-record/</guid>
      <description>记录Leetcode题解链接，完整测试代码见loypt/leetcode
No. Problem(leetcode-cn) Problem Solution Link(题解) 1 两数之和 Two Sum Issues Blog 2 两数相加 Add Two Numbers Issues Blog 3 无重复字符的最长子串 Longest Substring Without Repeating Characters Issues Blog 4 寻找两个正序数组的中位数 Median of Two Sorted Arrays Issues Blog 5 最长回文子串 Longest Palindromic Substring Issues Blog 6 Z 字形变换 Zigzag Conversion Issues Blog 7 整数反转 Reverse Integer Issues Blog 8 字符串转换整数 (atoi) String to Integer (atoi) Issues Blog 9 回文数 Palindrome Number Issues Blog 10 正则表达式匹配 Regular Expression Matching Issues Blog 11 盛最多水的容器 Container With Most Water Issues Blog 12 整数转罗马数字 Integer to Roman Issues Blog 13 数字转整数 Roman to Integer Issues Blog 14 最长公共前缀 Longest Common Prefix Issues Blog 15 三数之和 3Sum Issues Blog 16 最接近的三数之和 3Sum Closest Issues Blog 17 电话号码的字母组合 Letter Combinations of a Phone Number Issues Blog 18 四数之和 4Sum Issues Blog 19 删除链表的倒数第 N 个结点 Remove Nth Node From End of List Issues Blog 20 有效的括号 Valid Parentheses Issues Blog 21 合并两个有序链表 Merge Two Sorted Lists Issues Blog 22 括号生成 Generate Parentheses Issues Blog 23 合并K个升序链表 Merge k Sorted Lists Issues Blog 24 25 26 27 28 29 30 31 题目版权©️leetcode.</description>
    </item>
    
    <item>
      <title>Loyio&#39;s Handbook Table of Contents</title>
      <link>https://loyio.me/posts/handbook-toc/</link>
      <pubDate>Sat, 31 Jul 2021 07:32:44 +0800</pubDate>
      
      <guid>https://loyio.me/posts/handbook-toc/</guid>
      <description>数学 直角坐标系下的图像 初等数学常用公式 [PDF:下载] 高等数学 [PDF:下载] 线性代数 [PDF:下载] 概率论与数理统计 [PDF:下载] 数据结构 </description>
    </item>
    
    <item>
      <title>场论初步</title>
      <link>https://loyio.me/posts/elementary-field-theory/</link>
      <pubDate>Sat, 10 Jul 2021 10:27:37 +0800</pubDate>
      
      <guid>https://loyio.me/posts/elementary-field-theory/</guid>
      <description>1.方向导数 方向导数的计算公式 设三元函数 $u=u(x,y,z)$ 在点 $P_0(x_0, y_0, z_0)$ 处可微分，则 $u=u(x,y,z)$ 在点 $P_0$ 处沿任意方向 $l$ 的方向导数都存在，且
$$ \frac{\partial u}{\partial l}\Bigl|_{P_{0}} =u&#39;_{x}( P_{0})\cos \alpha +u&#39;_{y}( P_{0})\cos \beta +u&#39;_{z}( P_{0})\cos \gamma $$ 二元函数的情况与三元函数类似
2.梯度 在一个数量场中，函数在所给定点处沿不同的方向，其方向导数一般是不相同的。为研究沿哪一个方向其方向导数最大、或增加的速度最快，于是引入了一个重要的概念&amp;mdash;梯度
设三元函数 $u=u(x,y,z)$ 在点 $P_0(x_0,y_0,z_0)$ 处具有一阶偏导数，则定义
$$ \operatorname{grad}\ u\Bigl|_{P_{0}} =( u&#39;_{x}( P_{0}) ,\ u&#39;_{y}( P_{0}) ,\ u&#39;_{z}( P_{0})) $$ 为函数$u=u(x,y,z)$ 在点$P_0$处的梯度
3.方向导数与梯度的关系 由方向导数的计算公式 $\frac{\partial{u}}{\partial{l}}\bigl|_{P_0} = (u_x&amp;rsquo;(P_0),u_y&amp;rsquo;(P_0),u_z&amp;rsquo;(P_0))$与梯度的定义
$$ \operatorname{grad}\ u\Bigl|_{P_{0}} =( u&#39;_{x}( P_{0}) ,\ u&#39;_{y}( P_{0}) ,\ u&#39;_{z}( P_{0})) $$ 可以得到</description>
    </item>
    
    <item>
      <title>常用函数图像</title>
      <link>https://loyio.me/posts/common-function-graphics/</link>
      <pubDate>Fri, 09 Jul 2021 07:20:24 +0800</pubDate>
      
      <guid>https://loyio.me/posts/common-function-graphics/</guid>
      <description>（一）直角坐标系下的图像 1. 常见图像 ⑤三角函数 （1）正弦函数与余弦函数 （二）极坐标系下的图像 1. 描点法 （1）心形线 极坐标方程：
水平方向：$r=a(1-\cos{\theta})(a&amp;gt;0)$
垂直方向：$r=a(1-\sin{\theta})(a&amp;gt;0)$
直角坐标方程：
$x^2+y^2+ax=a\sqrt{(x^2+y^2)}$ 或$x^2+y^2-ax=a\sqrt{(x^2+y^2)}$
参数方程：
$x=a(2\cos{(t)}-\cos{(2t)})$
$y=a(2\sin{(t)}-\sin{(2t)})$</description>
    </item>
    
    <item>
      <title>一阶微分方程与一阶线性方程的求解</title>
      <link>https://loyio.me/posts/first-order-differential-equationsandlinearequations/</link>
      <pubDate>Thu, 08 Jul 2021 15:07:55 +0800</pubDate>
      
      <guid>https://loyio.me/posts/first-order-differential-equationsandlinearequations/</guid>
      <description>一.可分离变量的一阶微分方程 如果能够把一阶微分方程中所有关于 $y$ 的部分 (包括 $\mathrm{d}y$) 放在一边, 所有关于 $x$ 的部分 (包括 $\mathrm{d}x$) 放在另一边, 则该微分方程被称为是可分离变量的. 例如, 方程 $\mathrm{dy}/\mathrm{dx} = ky$ 可重新整理为 $$ \frac{1}{ky}\mathrm{d}y = \mathrm{d}x, $$ 就是可分离变量的。
然后继续计算的方法就是两遍加积分号求积分。然后再整理求得 $y$。
最终求得的全解，可能会包含一些常数变量。
如果在题干中，涉及到初值时，还是使用以上的求解方法，最后将初值代入求得的全解中，就可以得到未知常数$C$了。
二.一阶线性方程的求解 1.前言 形如 $$ \frac{\mathrm{d}y}{\mathrm{d}x}+p(x)y = q(x) $$ 其中 $p$ 和 $q$ 是关于 $x$ 的函数，这样的方程就称为一阶线性微分方程， 它可能不是可分离变量的, 甚至连线性看起来也不很明显! 例如, $$ \frac{\mathrm{d} y}{\mathrm{~d} x}+6 x^{2} y=\mathrm{e}^{-2 x^{3}} \sin (x) $$ 就不像是线性的, 然而这个方程确实是一阶线性的, 因为 $y$ 和 $\mathrm{d}y/\mathrm{d}x$ 的幂次都是 1. 而方程 $$ \frac{\mathrm{d} y}{\mathrm{~d} x}+6 x^{2} y^{3}=\mathrm{e}^{-2 x^{3}} \sin (x) $$ 不是一阶线性的, 因为 $y^3$ 不是 $y$ 的一次</description>
    </item>
    
    <item>
      <title>常系数微分方程求解</title>
      <link>https://loyio.me/posts/constant-coefficient-differential-equations/</link>
      <pubDate>Thu, 08 Jul 2021 14:55:05 +0800</pubDate>
      
      <guid>https://loyio.me/posts/constant-coefficient-differential-equations/</guid>
      <description>常系数微分方程的形式如下 $$ a_{n} \frac{\mathrm{d}^{n} y}{\mathrm{~d} x^{n}}+\cdots+a_{2} \frac{\mathrm{d}^{2} y}{\mathrm{~d} x^{2}}+a_{1} \frac{\mathrm{d} y}{\mathrm{~d} x}+a_{0} y=f(x) $$ 其中$a_n,\ldots,a_1,a_0$知识一些普通的常实数，左边式子中$\frac{\mathrm{d}^{n} y}{\mathrm{~d} x^{n}}$，代表的是$y$的$n$阶导数。</description>
    </item>
    
    <item>
      <title>常用的泰勒级数</title>
      <link>https://loyio.me/posts/10staylorpolyseries/</link>
      <pubDate>Thu, 08 Jul 2021 13:08:01 +0800</pubDate>
      
      <guid>https://loyio.me/posts/10staylorpolyseries/</guid>
      <description>以下公式来源于South Caolina
1.$\frac{1}{1-x}$ $$ \begin{aligned}\frac{1}{1-x} &amp;amp;=\quad1+x+x^{2}+x^{3}+x^{4}+\ldots \\&amp;amp;=\quad\sum_{n=0}^{\infty} x^{n}\end{aligned} $$
当为几何级数时。只需将$x$视为$r$
$x\in (-1,1)$
2. $e^x$ $$ \begin{aligned}e^{x}\quad &amp;amp;=\quad 1+x+\frac{x^{2}}{2 !}+\frac{x^{3}}{3 !}+\frac{x^{4}}{4 !}+\ldots \\&amp;amp;=\quad\sum_{n=0}^{\infty} \frac{x^{n}}{n !}\end{aligned} $$
3.$\cos{x}$ $$ \begin{aligned}\cos x\quad &amp;amp;=\quad1-\frac{x^{2}}{2 !}+\frac{x^{4}}{4 !}-\frac{x^{6}}{6 !}+\frac{x^{8}}{8 !}-\ldots \\&amp;amp;=\quad\sum_{n=0}^{\infty}(-1)^{n} \frac{x^{2 n}}{(2 n) !}\end{aligned} $$
4.$\sin{x}$ $$ \begin{aligned}\sin x \quad &amp;amp;=\quad x-\frac{x^{3}}{3 !}+\frac{x^{5}}{5 !}-\frac{x^{7}}{7 !}+\frac{x^{9}}{9 !}-\ldots \\&amp;amp;=\quad \sum_{n=1}^{\infty}(-1)^{(n-1)} \frac{x^{2 n-1}}{(2 n-1) !} \stackrel{\text { or }}{=} \sum_{n=0}^{\infty}(-1)^{n} \frac{x^{2 n+1}}{(2 n+1) !}\end{aligned} $$
5.$\ln{(1+x)}$ $$ \begin{aligned}\ln (1+x)\quad &amp;amp;=\quad x-\frac{x^{2}}{2}+\frac{x^{3}}{3}-\frac{x^{4}}{4}+\frac{x^{5}}{5}-\ldots \\&amp;amp;=\quad\sum_{n=1}^{\infty}(-1)^{(n-1)} \frac{x^{n}}{n} \stackrel{\text { or }}{=} \sum_{n=1}^{\infty}(-1)^{n+1} \frac{x^{n}}{n}\end{aligned} $$</description>
    </item>
    
    <item>
      <title>KaTeX(Latex)支持的TeX函数</title>
      <link>https://loyio.me/posts/latex-katex/</link>
      <pubDate>Thu, 08 Jul 2021 08:49:53 +0800</pubDate>
      
      <guid>https://loyio.me/posts/latex-katex/</guid>
      <description>字符与Unicode 希腊字母（Greek Letters） 小写形式 渲染字符 Katex 渲染字符 Katex 渲染字符 Katex 渲染字符 Katex $\alpha$ \alpha $\beta$ \beta $\gamma$ \gamma $\delta$ \delta $\epsilon$ \epsilon $\zeta$ \zeta $\eta$ \eta $\theta$ \theta $\iota$ \iota $\kappa$ \kappa $\lambda$ \lambda $\mu$ \mu $\nu$ \nu $\xi$ \xi $\omicron$ \omicron $\pi$ \pi $\rho$ \rho $\sigma$ \sigma $\tau$ \tau $\upsilon$ \upsilon $\phi$ \phi $\chi$ \chi $\psi$ \psi $\omega$ \omega $\varepsilon$ \varepsilon $\varkappa$ \varkappa $\vartheta$ \vartheta $\thetasym$ \thetasym $\varpi$ \varpi $\varrho$ \varrho $\varsigma$ \varsigma $\varphi$ \varphi $\digamma$ \digamma $\varGamma$ \varGamma $\varDelta$ \varDelta $\varTheta$ \varTheta $\varLambda$ \varLambda $\varXi$ \varXi $\varPi$ \varPi $\varSigma$ \varSigma $\varUpsilon$ \varUpsilon $\varPhi$ \varPhi $\varPsi$ \varPsi $\varOmega$ \varOmega 大写形式 渲染字符 Katex 渲染字符 Katex 渲染字符 Katex 渲染字符 Katex $\Alpha$ \Alpha $\Beta$ \Beta $\Gamma$ \Gamma $\Delta$ \Delta $\Epsilon$ \Epsilon $\Zeta$ \Zeta $\Eta$ \Eta $\Theta$ \Theta $\Iota$ \Iota $\Kappa$ \Kappa $\Lambda$ \Lambda $\Mu$ \Mu $\Nu$ \Nu $\Xi$ \Xi $\Omicron$ \Omicron $\Pi$ \Pi $\Rho$ \Rho $\Sigma$ \Sigma $\Tau$ \Tau $\Upsilon$ \Upsilon $\Phi$ \Phi $\Chi$ \Chi $\Psi$ \Psi $\Omega$ \Omega 其它字符 渲染字符 Katex 渲染字符 Katex 渲染字符 Katex 渲染字符 Katex $\imath$ \imath $\nabla$ \nabla $\Im$ \Im $\Reals$ \Reals $\text{\OE}$ \text{\OE} $\jmath$ \jmath $\partial$ \partial $\image$ \image $\wp$ \wp $\text{\o}$ \text{\o} $\aleph$ \aleph $\Game$ \Game $\Bbbk$ \Bbbk $\weierp$ \weierp $\text{\O}$ \text{\O} $\alef$ \alef $\Finv$ \Finv $\N$ \N $\Z$ \Z $\text{\ss}$ \text{\ss} $\alefsym$ \alefsym $\cnums$ \cnums $\natnums$ \natnums $\text{\aa}$ \text{\aa} $\text{\i}$ \text{\i} $\beth$ \beth $\Complex$ \Complex $\R$ \R $\text{\AA}$ \text{\AA} $\text{\j}$ \text{\j} $\gimel$ \gimel $\ell$ \ell $\Re$ \Re $\text{\ae}$ \text{\ae} $\daleth$ \daleth $\hbar$ \hbar $\real$ \real $\text{\AE}$ \text{\AE} $\eth$ \eth $\hslash$ \hslash $\reals$ \reals $\text{\oe}$ \text{\oe} 操作符 大操作符 渲染操作符 Katex 说明 举例 Katex函数 $\sum$ \sum 求和符号 $\displaystyle\sum_{n=1}^{6}{4n}$ \displaystyle\sum_{n=1}^{6}{4n} $\prod$ \prod 连乘、求积符号 $\displaystyle\prod_{n=1}^{\infty}{(1-\frac{1}{4n^2})}$ \displaystyle\prod_{n=1}^{\infty}{(1-\frac{1}{4n^2}) $\bigotimes$ \bigotimes $\bigvee$ \bigvee $\int$ \int 积分符号 $\int_{0}^{t}{f(t)dt}$ \int_{0}^{t}{f(t)dt} </description>
    </item>
    
    <item>
      <title>图像处理第三次实验-图像预处理</title>
      <link>https://loyio.me/posts/image-processing-cv-experiment03/</link>
      <pubDate>Fri, 26 Mar 2021 21:25:11 +0800</pubDate>
      
      <guid>https://loyio.me/posts/image-processing-cv-experiment03/</guid>
      <description>一.对比度优化方法CLAHE 1.使用软件fiji优化图片序列 实验过程：
1）下载安装Fiji
2）解压30-T4N2, 24_pre_waterT1C.nii.zip
3）打开一张图片
4）在fiji中, Process -&amp;gt; Enhance Local Contrast（CLAHE, Contrast Limited Adaptive Histogram Equalization 直方图均衡化算法），将参数设置为如下，观察图片变化
blocksize = 64 histogram bins = 128 max slope = 2.0
图片效果如下
原图
处理后的图
可以看到部分区域对比度增强，图像中体现的信息也更为突出。
2.使用fiji脚本批量处理一组图片 1）使用fiji打开16-T2N2,33+_post_waterT1C.nii.gz
2）使用Fiji&amp;rsquo;s scripting editor，将语言更改为IJ1 Macro，运行脚本
3）最后点击菜单栏File → Save As → Image Sequence
保存为png格式，存储在文件夹中。
二.图像x-ray去噪 使用median filter算法，批处理文件/x-ray-images-enhancement-master/images/
中值滤波器：中值滤波器是众所周知的阶数统计滤波器之一，因为它对某些特定的噪声类型（例如“高斯”，“随机”和“盐和胡椒”噪声）具有良好的性能。根据中值滤波器，将M×M邻域的中心像素替换为相应窗口的中值。注意，噪声像素被认为与中值有很大差异。使用这种思想，中值滤波器可以消除这种类型的噪声问题。
批处理代码实现如下：
path=&amp;#39;images/&amp;#39; file_list = [f for f in os.listdir(path) if not f.startswith(&amp;#39;.&amp;#39;)] file_num = len(file_list) i = 1 print(&amp;#34;file_num&amp;#34;, file_num) for img_dir in file_list: im = Image.</description>
    </item>
    
    <item>
      <title>图像处理第二次试验-裁剪图像</title>
      <link>https://loyio.me/posts/image-processing-cv-experiment02/</link>
      <pubDate>Mon, 22 Mar 2021 21:19:03 +0800</pubDate>
      
      <guid>https://loyio.me/posts/image-processing-cv-experiment02/</guid>
      <description>医学图像预处理 1）搭建运行环境，运行Brain Tumor Detection代码中裁剪功能 预先安装好相关模块，安装Jupyter Notebook交互式计算环境
conda install jupyter 首先导入相关包
import tensorflow as tf from tensorflow.keras.layers import Conv2D, Input, ZeroPadding2D, BatchNormalization, Activation, MaxPooling2D, Flatten, Dense from tensorflow.keras.models import Model, load_model from tensorflow.keras.callbacks import TensorBoard, ModelCheckpoint from sklearn.model_selection import train_test_split from sklearn.metrics import f1_score from sklearn.utils import shuffle import cv2 import imutils import numpy as np import matplotlib.pyplot as plt import time from os import listdir %matplotlib inline 因为这里只是进行图形预处理，对Brain Tumor图片进行裁剪，主要用到的包是cv2, imutils, numpy, matplotlib.</description>
    </item>
    
    <item>
      <title>图像处理第一次实验-初识CV</title>
      <link>https://loyio.me/posts/image-processing-cv-experiment01/</link>
      <pubDate>Sat, 20 Mar 2021 21:14:43 +0800</pubDate>
      
      <guid>https://loyio.me/posts/image-processing-cv-experiment01/</guid>
      <description>1.jpg
2.jpg
1.对1.jpg 分别作灰度化, 模糊化处理. 代码如下
&amp;#34;&amp;#34;&amp;#34; @Project: imageProcessing @Author: loyio @Date: 3/20/21 &amp;#34;&amp;#34;&amp;#34; from PIL import Image, ImageFilter if __name__ == &amp;#39;__main__&amp;#39;: # greyscale imgfileOne = &amp;#34;Sample/1&amp;#34; sample_img = Image.open(imgfileOne+&amp;#34;.jpg&amp;#34;).convert(&amp;#39;L&amp;#39;) sample_img.save(imgfileOne+&amp;#34;_processed_gray.jpg&amp;#34;) # Blur # sample_img = Image.open(imgfileOne+&amp;#34;.jpg&amp;#34;).filter(ImageFilter.BLUR) sample_img = Image.open(imgfileOne+&amp;#34;.jpg&amp;#34;).filter(ImageFilter.BoxBlur(5)) sample_img.save(imgfileOne + &amp;#34;_processed_blur.jpg&amp;#34;) 图片效果如下
灰度处理
模糊处理
2.对2.jpg生成手绘效果 代码如下
&amp;#34;&amp;#34;&amp;#34; @Project: imageProcessing @Author: loyio @Date: 3/20/21 &amp;#34;&amp;#34;&amp;#34; from PIL import Image, ImageFilter import numpy as np if __name__ == &amp;#39;__main__&amp;#39;: # Paint imgfileTwo = &amp;#34;Sample/2&amp;#34; sample_img_ary = np.</description>
    </item>
    
    <item>
      <title>rclone突破750G转存限制（使用gclone和Autoclone）</title>
      <link>https://loyio.me/posts/gclone-over-750g/</link>
      <pubDate>Thu, 07 May 2020 19:59:48 +0800</pubDate>
      
      <guid>https://loyio.me/posts/gclone-over-750g/</guid>
      <description>最近一直都在折腾GoogleDrive，有时候看到Tg群里面大佬分享的资源，都特别的大，本来一开始我是使用插件copy url to googledrive，应该是这个名称吧，不过比较鸡肋的是，这个只能转存到个人盘中，在没购买容量套餐前所有的人都默认是15G，远远不够用，虽然我买了一年的100G，但是依然不够用，随便转存点什么，就超过100G了，而且还要自己手动移动到团队盘
在之前我就讲过了用rclone挂载GoogleDrive到linux服务器上的教程，大家可以点击下面的链接查看
使用谷歌云搭建google drive离线下载服务器
在用rclone转存文件时，我们可能会遇到超过日转存限制的情况，Google每天的限制750G，这对于我们这些特别喜欢搬运的人来说是远远不够的
首先说一些解决方法原理：
谷歌开发者平台可以多个项目，每个项目下还可以创建多个服务账号（SA：Service Account），每个SA又可以创建自己单独的Api，每个Api都可以和单个用户一样拥有750GB的权限。
这里我们要用到autoclone，批量生成SA账号，还要用到gclone，自动切换SA，以突破750G的限制
我在这里不说具体的操作过程了，大佬们都有写，做重复的事情没有什么意义
gclone 搬山之术 by HE-SB-技术栈
AutoRclone配合gclone突破GoogleTeamDrive750G流量限制 by 余十一 可能是最简单的AutoRclone教程：如何突破Google Drive每日750G限制？ by Great Panoan
我在这里只记录一下重要的网址和一些代码
首先要安装python3,可以源码安装，也可以直接通过yum或者apt-get安装
然后安装autoclone
git clone https://github.com/xyou365/AutoRclone &amp;amp;&amp;amp; cd AutoRclone &amp;amp;&amp;amp; pip3 install -r requirements.txt 获取Python DriveApi 凭证
https://developers.google.com/drive/api/v3/quickstart/python
管理Google Group
https://groups.google.com/
查看ServiceAccount
https://console.cloud.google.com/projectselector2/iam-admin/serviceaccounts?pli=1&amp;amp;supportedpurview=project
基本上就上面这些东西，如果有不明白的可以到上面的那些链接里去问大佬，当然也可以发邮件给我，我尽力解答</description>
    </item>
    
    <item>
      <title>Surge-For-Mac模块 Q-Search 自定义搜索</title>
      <link>https://loyio.me/posts/q-search-surge-for-mac/</link>
      <pubDate>Wed, 06 May 2020 19:55:11 +0800</pubDate>
      
      <guid>https://loyio.me/posts/q-search-surge-for-mac/</guid>
      <description>昨天狠下心上了SurgeForMac的车，140永久，这是继Quantumult X后的又一次剁手，我也不知道自己怎么这么折腾，本来我Mac端用Clash用的好好的，没啥其它问题，可能是头脑一热吧，不过我今天就是想介绍一下，我重写的一款Surge模块，Q-Search
前言 在手机上用过Quantumult X和Surge的应该很熟悉这个插件，就是利用了重写的功能，实现自定义搜索命令，比如我想要在京东上搜索笔记本，我只需要在搜索栏输入 jd 笔记本 就可以了
然后回车，它会自动重定向至京东搜索页面，如下图所示
像这样的搜索命令还有很多，比如tb(在淘宝网搜索)，db（在豆瓣搜索）， 我这就不一一列举了，可以在我的源码中查询，里面都有注释
我根据大佬们的源码，自己改进了一些，并成功适配Mac端的Surge，而且做了桌面页面的匹配，Quantumult X原代码链接Github
Surge配置 下面我说下如何在自己的SurgeForMac中配置Q-Search
1.打开模块设置 首先打开Surge，在左面的菜单栏中选择设置，如下图所示，然后点击模块
然后我们进入下面的页面
2.安装模块 有两种方法安装模块，直接本地加载和从URL安装模块
第一种方法就是从github把模块下载下来，然后放到Surge默认配置路径中，注意后缀名称为.sgmodule
第二种方法，就是直接点击左下角的从URL安装模块，然后将 Q-Search 链接粘贴到文本框中，最后点击完成
3.启用模块 安装模块后，记得启用模块，就是把左边的选项框勾选即可，如下图所示
4.注意事项 请确保你已经进行了Mitm配置，是否安装证书且信任证书，并进行了主机名配置
使用模块之前 请先将Safari的默认搜索改为DuckDuckGo
使用模块 一般无指令的搜索，默认是进行Google搜索
想要知道所有指令，直接点击下面链接即可，基本上都有注释说明
https://raw.githubusercontent.com/loyio/SurgeMacModule/master/Q-Search.sgmodule
下面我们在mac端试验一下京东搜索指令，指令还是jd 笔记本
回车即可返回下面的搜索页面
如果有不明白的问题，可以邮件联系我</description>
    </item>
    
    <item>
      <title>pip安装模块时报错 ModuleNotFoundError:No module named &#39;_ctypes&#39;</title>
      <link>https://loyio.me/posts/pip-install-module-error-ctypes/</link>
      <pubDate>Wed, 06 May 2020 19:51:51 +0800</pubDate>
      
      <guid>https://loyio.me/posts/pip-install-module-error-ctypes/</guid>
      <description>最近一直在折腾GoogleDrive，用了rclone，又装AutoClone，最近又用上了gclone
在安装AutoClone依赖文件时报错
ERROR: Command errored out with exit status 1: command: /usr/local/python3/bin/python3.8 -c &amp;#39;import sys, setuptools, tokenize; sys.argv[0] = &amp;#39;&amp;#34;&amp;#39;&amp;#34;&amp;#39;/tmp/pip-install-c6woj60b/progress/setup.py&amp;#39;&amp;#34;&amp;#39;&amp;#34;&amp;#39;; __file__=&amp;#39;&amp;#34;&amp;#39;&amp;#34;&amp;#39;/tmp/pip-install-c6woj60b/progress/setup.py&amp;#39;&amp;#34;&amp;#39;&amp;#34;&amp;#39;;f=getattr(tokenize, &amp;#39;&amp;#34;&amp;#39;&amp;#34;&amp;#39;open&amp;#39;&amp;#34;&amp;#39;&amp;#34;&amp;#39;, open)(__file__);code=f.read().replace(&amp;#39;&amp;#34;&amp;#39;&amp;#34;&amp;#39;\r\n&amp;#39;&amp;#34;&amp;#39;&amp;#34;&amp;#39;, &amp;#39;&amp;#34;&amp;#39;&amp;#34;&amp;#39;\n&amp;#39;&amp;#34;&amp;#39;&amp;#34;&amp;#39;);f.close();exec(compile(code, __file__, &amp;#39;&amp;#34;&amp;#39;&amp;#34;&amp;#39;exec&amp;#39;&amp;#34;&amp;#39;&amp;#34;&amp;#39;))&amp;#39; egg_info --egg-base pip-egg-info cwd: /tmp/pip-install-c6woj60b/progress/ Complete output (11 lines): Traceback (most recent call last): File &amp;#34;&amp;lt;string&amp;gt;&amp;#34;, line 1, in &amp;lt;module&amp;gt; File &amp;#34;/usr/local/python3/lib/python3.8/site-packages/setuptools/__init__.py&amp;#34;, line 20, in &amp;lt;module&amp;gt; from setuptools.dist import Distribution, Feature File &amp;#34;/usr/local/python3/lib/python3.8/site-packages/setuptools/dist.py&amp;#34;, line 35, in &amp;lt;module&amp;gt; from setuptools import windows_support File &amp;#34;/usr/local/python3/lib/python3.8/site-packages/setuptools/windows_support.py&amp;#34;, line 2, in &amp;lt;module&amp;gt; import ctypes File &amp;#34;/usr/local/python3/lib/python3.</description>
    </item>
    
    <item>
      <title>谈谈自己为什么又开始写博客了</title>
      <link>https://loyio.me/posts/why-me-rebuilt-blog/</link>
      <pubDate>Tue, 05 May 2020 19:48:37 +0800</pubDate>
      
      <guid>https://loyio.me/posts/why-me-rebuilt-blog/</guid>
      <description>其实我17年刚读大一的时候，就建立了自己的博客，那时候是用的阿里云的服务器，学生机9.9，然后域名好像是在godaddy买的吧，只不过当时为了备案又把这个域名迁移到了阿里云，国内主机配国外域名真的很鸡肋啊，当时godaddy还不允许前三个月迁移，所以前面一直用的临时域名。
一开始我用的是Wordpress，主题非常多，插件也很多，对于喜欢给自己的网站添加各种功能的人简直太友好了，我当时也用了一段时间，用户管理，插件各方面，都很不错，弄的自己网站五花八门，忽视了内容，而太过在意形式，有几次配置插件把自己的网站的内容都清除掉了，然后，还有一点就是，毕竟自己的服务器是9.9学生机，所以网站的访问速率也慢了很多。
后面又陆陆续续换了好几个博客程序，最后我还是决定了用zblog，因为这个博客的自由度还是挺高的，我可以修改底层代码，也可以自己写一些插件，虽然自己一定也不会PHP，但是看着别人代码一步一步改还是可以的，可惜，当时不知道我怎么就把这个网站全给删了，包括数据库，现在什么都没有了，不过博客的大部分内容我在博客园和 CSDN都有发布，上面的网站我都好久不发布了，想想当时的自己真的有点萌新感啊，最后一篇博客的时间刚好两年前的今天，实在是妙啊。
后面我堕落了很久，一直没在技术上有过突破，每天就是上上课，完成一下老师布置的任务，其余时间也不再专心于计算机科学这一门，主要原因是因为上面呢，我想是因为当时看了创造101吧，后面就开始追星了，到现在我还完全放不下，年轻人有时候对某一件事真的太执着了。
中间发生了什么我也不太清楚，这两年也不知道自己有什么成就，一直都是把18年写过的程序炒冷饭，然后参加一些比赛，也拿一些奖品或事奖金，或许吧，这就是没有进取心的自己吧，Bilibili的《后浪》我还没看过，这个年纪的自己最反感一些鸡汤，我还是继续做一颗微小的沙粒吧。
疫情期间，我在今天2.15后申请了自己的公众号，发现尽管自己的内心是颓废了很多，但热爱创作的那双手还是诚不欺我，一写起来就有吐不尽的废话，虽然文采黯然，但就是喜欢记录，就是喜欢发泄，只不过，后面不知怎地开始做起了所谓的营销号，每天从外网搬一篇文章到国内平台发布，然后赚几块钱流量费。
人总是易变的，而我是过于如此了，不谈太多了。
想着还是用github做一个静态博客算了，写写没人看的东西，发泄一下自己的内心，也记录一下，方便以后自己查询。</description>
    </item>
    
    <item>
      <title>Surge神机规则备份</title>
      <link>https://loyio.me/posts/surge-connershua-rules/</link>
      <pubDate>Tue, 05 May 2020 19:43:27 +0800</pubDate>
      
      <guid>https://loyio.me/posts/surge-connershua-rules/</guid>
      <description>原Surge配置文件地址
Surge3 Profiles
[General] # [高级设置] # 日志等级 loglevel = notify # 延迟测试（以下为默认值） # &amp;gt; Internet 测试 URL # internet-test-url = http://bing.com/ # &amp;gt; 代理测速 URL # proxy-test-url = http://bing.com/ # &amp;gt; 测速超时（秒） # test-timeout = 5 # IPv6 支持 ipv6 = false # Wi-Fi 访问 # &amp;gt; 允许 Wi-Fi 访问（默认不启用） # allow-wifi-access = false # &amp;gt; HTTP 代理服务端口（默认为&amp;#34;6152&amp;#34;） # wifi-access-http-port = 6152 # &amp;gt; SOCKS5 代理服务端口（默认为&amp;#34;6153&amp;#34;） # wifi-access-socks5-port = 6153 # 外部控制器（默认不启用，以下为样例） # external-controller-access = DivineEngine@127.</description>
    </item>
    
    <item>
      <title>Loyio的书籍分享</title>
      <link>https://loyio.me/posts/books-share/</link>
      <pubDate>Tue, 05 May 2020 19:40:12 +0800</pubDate>
      
      <guid>https://loyio.me/posts/books-share/</guid>
      <description>还是和之前一样，做一个页面来分享一些书籍文件，方便大家查找，自己也做个记录。
我其实之前也是一个挺喜欢看书的人，静下心来，默默品读，也不知什么时候，突然我的生活进节奏加快了，后面我便不再这方面花费时间了，也买过很多实体书，为了不浪费自己的钱，还是坚持看完了，如今有时候也喜欢看一些技术类书籍，都是为了查阅资料
一年前买了kindle，看了没多久，就开始闲置了，几天不清理就全是灰，我这里其实也没啥能分享的，都是我从各个地方保存下来的，也算是当个参考吧。</description>
    </item>
    
    <item>
      <title>个人收藏的一些Mac软件（持续更新）</title>
      <link>https://loyio.me/posts/mac-app-sheet-link/</link>
      <pubDate>Mon, 04 May 2020 19:26:34 +0800</pubDate>
      
      <guid>https://loyio.me/posts/mac-app-sheet-link/</guid>
      <description>最近在找某些软件时，总是遇到很多问题，要么就是国内的下载付费（本来就是破解的），要么就是国外下载速度特别慢，因为大多是磁力链接，而且这些都是比较冷门的资源，所以下载速度特别慢，这里我声明一下，我收集的软件仅供学习交流使用，请大家到官方网站下载正版，付费支持。
这里我决定做一个页面，把自己收藏的软件分享出来，然后也分别做百度云和GoogleDrive链接🔗，也算是自己记录一下，方便自己以后找寻资料（再次声明，请大家支持正版）
这里百度网盘和GoogleDrive链接理论上是永久的，如果出现访问问题，可以通过邮件联系我，我会尽快回复，并更新链接
下面的软件我都安装试用过，也写了我个人觉得有用的功能
这是Number表格的链接， 国内应该可以访问的吧 iCloudeNumber （分享链接全部都放在里面了）
软件名称 版本 描述 CleanMyMac X 4.6.2 用来清理一下磁盘用的，我最喜欢的功能就是可以清楚的知道你哪个文件夹占用了多少空间，这个对于我真的太有用了 Blue-ray Player Pro 3.3.18 可以打开播放蓝光盘文件，也就是iso结尾的视频文件，这个对于喜欢追求更高品质的电影原盘的人非常有用 BetterTouchTool 3.346 这个是用来配置自己的各种设备的，比如我之前用它来自定义我的MagicMouse2，设置各种手势，比如单指轻点 Folx 5.18(13943) 一个下载工具，可以通过浏览器插件做mac的默认下载工具，同时也支持种子和磁力下载，除此之外，还支持youtube下载，不过我一直加载不出 最后说一句，破解有风险，这些分享的基本上都是TNT团队破解的，如果觉得软件对你有用的话，请支持正版</description>
    </item>
    
    <item>
      <title>设置Hexo博客Next主题主页不显示全文</title>
      <link>https://loyio.me/posts/hexo-next-theme-nondisplay-fullpassage/</link>
      <pubDate>Mon, 04 May 2020 19:17:40 +0800</pubDate>
      
      <guid>https://loyio.me/posts/hexo-next-theme-nondisplay-fullpassage/</guid>
      <description>&lt;p&gt;使用Hexo配置自己的博客后，感觉很多方面都要轻松很多，一开始我是在Hexo Theme Page里面找到了一个比较好看的主题，奈何配置上之后，很多功能无法实现，且开发者好像也不再维护更新了，最终我还是决定使用Next博客，配置项的确是挺多的，所以功能也比较齐全，目前也有社区在维护更新&lt;/p&gt;
&lt;p&gt;Next博客的主页总是会将你的文章全文显示出来，这样可读性是比较差的，如果你文章特别长的话，对于加载也有一定的影响，另一方面，没有目录，访问者无法清楚的找出自己要得到的内容&lt;/p&gt;
&lt;p&gt;所以我觉得还是要设置一些，让主页不显示全文，&lt;/p&gt;
&lt;p&gt;Google了一下，发现解决方法就是打开主题下的配置文件，将下面的enable改为true就可以了&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;auto_excerpt&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;enable&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;false&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;奈何我在配置文件中根本就没找到这个关键词，可能是主题配置重写了吧，下面说说我的解决步骤&lt;/p&gt;
&lt;p&gt;打开&lt;code&gt;themes/next&lt;/code&gt; 目录下的 &lt;code&gt;config.yml&lt;/code&gt; ，查看摘要描述是否为true，默认是开启的&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Automatically excerpt description in homepage as preamble text.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;excerpt_description&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;然后你有两种方法，让你文章在首页只显示部分&lt;/p&gt;
&lt;h4 id=&#34;1写概述&#34;&gt;1.写概述&lt;/h4&gt;
&lt;p&gt;在文章的最上面 &lt;code&gt;front-matter&lt;/code&gt; 中添加 &lt;code&gt;description&lt;/code&gt;,&lt;/p&gt;
&lt;p&gt;然后在冒号后面写你这篇文章的概述，配置完成后，你的主页就只会显示这篇文章的&lt;code&gt;description&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;title: 文章标题
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;date: 2020-05-04 13:07:04
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;description: 首页的概述，正文内容不会显示
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;2截断文章&#34;&gt;2.截断文章&lt;/h4&gt;
&lt;p&gt;在需要截断的地方加入&lt;/p&gt;
&lt;p&gt;`&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Hexo博客SEO优化，将你的网站提交到搜索引擎</title>
      <link>https://loyio.me/posts/hexo-blog-seo/</link>
      <pubDate>Mon, 04 May 2020 19:10:17 +0800</pubDate>
      
      <guid>https://loyio.me/posts/hexo-blog-seo/</guid>
      <description>1.什么是SEO SEO（Search Engine Optimization）顾名思义就是搜索引擎优化，比如你想让别人在百度、google搜索某些内容时，刚好可以出现自己网站的链接，简单来说，就是提高你个人网站的流量。虽然我这人本来就没想过要什么流量，主要目的是想记录一些东西，给自己看的，但是，如果自己的博客能够帮助到别人解决问题，我感觉还是挺值得的。我下面介绍的都是Hexo静态网站博客相关的
2.站点地图 也就是sitemap，站点地图可以告诉搜索引擎自己的网站有哪些可以抓取的内容，可以帮助搜索引擎更智能地抓取网站各个分支内容
1⃣️ 生成站点地图 首先要安装百度和谷歌（Google）的站点地图生成插件
npm install hexo-generator-baidu-sitemap --save npm install hexo-generator-sitemap --save 2⃣️ 修改配置文件 打开博客主目录的config.yml文件，添加下面的sitemap配置内容
# 生成博客sitemap sitemap: path: sitemap.xml baidusitemap: path: baidusitemap.xml 3⃣️ 生成页面并部署到服务器 这个直接使用一键命令就可以了
hexo g -d 可以看到自己的public目录已经有下面两个文件了
3.百度站长平台 1⃣️ 添加网站 首先你要打开下面的网站
https://ziyuan.baidu.com/
然后登录你的账号，好像直接用百度账号就可以了，进入控制台，页面如下
点击下面的添加网站
根据步骤，选择站点属性，然后开始验证网站
我在这里选择的是文件验证，下载验证文件，然后把它放到你的网站根目录的source文件夹下，然后执行生成部署命令
hexo clean hexo g -d 然后点击完成验证就可以了 (❗如果验证失败，建议先生成页面，然后将文件放到public文件夹中，然后再部署到服务器)
2⃣️ 链接提交 我们在这里讲一下自动提交方法，手动提交按照要求在括号内填入链接即可
自动提交也有三种选项，主动推送、自动推送以及sitemap
1.主动推送 我们要用到hexo的插件，输入命令安装即可
npm install hexo-baidu-url-submit --save 然后在_config.yml文件添加以下内容
baidu_url_submit: count: 5 ## 提交最新的五个链接 host: blog.loyio.me ## 百度站长平台中注册的域名 token: token ## 准入秘钥 path: baidu_urls.</description>
    </item>
    
    <item>
      <title>Quantumult X 相关配置问题</title>
      <link>https://loyio.me/posts/quantumnltx-config/</link>
      <pubDate>Sun, 03 May 2020 18:43:06 +0800</pubDate>
      
      <guid>https://loyio.me/posts/quantumnltx-config/</guid>
      <description>之前一直用的是Shadowrocket（俗称小火箭，用了快一年多了吧，感情还是挺深的），配置起来的确要简单很多，但功能也自然谈不上丰富，今天看自己的印度Apple ID里面还有800卢比，想着放里面也是无用，不如花了痛快，于是就果断买了Quantumult x（好像大家常把它叫做圈X）。
1.购买之前 刚开始搜的时候出现了两个软件，Quantumult 和 Quantumult x，订阅价格差了20人民币左右，于是又在网上了解这两者的区别，总结来说，就是UI不一样，然后Quantumult x支持强大的JS脚本功能，对于喜欢瞎折腾的我当然是选择第二个完整版
2.寻找教程 在网上搜索了一下，进了非官方Tg群，这里有两个配置教程
Quantumult 完整教程: https://github.com/shigalin/Quantumult/blob/master/README.md
QuantumultX 用户教程: https://www.notion.so/kopshawn/Quantumult-X-1d32ddc6e61c4892ad2ec5ea47f00917
第一个相对比较简单，第二个就是进阶的操作了，不过这两个我都没怎么看
我打开了 https://merlinblog.xyz/wiki/quanx.html 这个网站，这个写的还是挺不错的，配置起来基本没啥难度
最关键的网站出来了https://github.com/nzw9314/QuantumultX/tree/master 这个基本上包含了圈X的所有配置和脚本，而且还附有视频讲解，目前也一直在维护
3.开始配置 具体过程我就不写了，上面的教程写的很清楚，我在这里只说几点我遇到的问题
自从去年GFW开始加大对ssr的封锁，我当时立即就决定用上给自己的服务器配置上trojan，用到现在也快有五六个月了吧，很久没用过ssr了，也很久没买过机场了，之前一直白嫖谷歌云，后面才开始买阿里云国际的3.5美元套餐，虽然各种服务比不上机场，但感觉用自己搭建的总是安全私密一点（可能是自己的心理作用吧）
好吧，回到正题，刚开始用圈X的时候我是懵逼的，这东西为什么不像小火煎那样，直接选择要连接的类型，然后在文本框中输入配置就算成功了，
当然圈X也可以直接输入配置信息进行配置，不过只支持ss，先要用其它的协议，只能去编辑配置源文件，按照Quantumult X的示例文件中添加即可，就改几个参数而已
下面是trojan的配置，将example.com改成你自己的trojan域名，pwd改成自己的密码就可以了
trojan=example.com:443, password=pwd, over-tls=true, tls-verification=true, fast-open=false, udp-relay=false, tag=trojan-tls-01 界面其实还挺好看的
其实到这一步，基本上代理的功能就完成了，也就是小火箭的功能
4.高级配置 在Quantumult X中有一个功能叫做重写，其实有点像我们在浏览器用到的js插件，也就是在页面中注入一些其它信息，比如逛京东时，可以看历史最低价
看netflix时，可以看这个节目在IMDB和豆瓣的评分
个人感觉是要方便很多
另一个高级一点的功能就是定时任务，执行js脚本，这个我觉得也挺有用的，比如各种签到任务啊，用Quantumult X的一个比较突出的一个特点就是获取cookie方便多了，不像我搞个签到网站，还要各种抓包，最后还不一定能成功，这里我不过多赘述了，再次贴上项目合集的网址
https://github.com/nzw9314/QuantumultX/tree/master</description>
    </item>
    
    <item>
      <title>Apple Arcade 游戏评测</title>
      <link>https://loyio.me/posts/arcade-game-record/</link>
      <pubDate>Fri, 01 May 2020 17:55:10 +0800</pubDate>
      
      <guid>https://loyio.me/posts/arcade-game-record/</guid>
      <description>开通了Apple的游戏订阅服务，里面虽然游戏很多，但其实很多游戏是比较适合小孩子玩的，目前我个人觉得能玩的游戏有Oceanhorn2，Spyder，Tint等，这里我决定将Arcade中的每个游戏都试玩一下，写一下自己的个人感受。
往右滑动表格，查看更多信息
图标 游戏名称 游戏类别 推荐指数 主要任务 链接🔗 个人感觉 Oceanhorn2 冒险类 ⭐️⭐️⭐️⭐️⭐️ 做一个优秀的骑士完成各种任务、探险⚔️🛡 App Store 任务剧情都挺喜欢的 Spyder 冒险类 ⭐️⭐️⭐️⭐️⭐️ 控制机器蜘蛛完成各种繁琐的任务，拯救生命🕷️ App Store 已通关、总共六关 Frogger 动作类 ⭐️⭐️ 操作青蛙，拯救小青蛙🐸 App Store 感觉有点低智，想不懂苹果发布会当时为什么选他演示，适合小朋友玩吧 WHAT THE GOLF? 休闲类 ⭐️⭐️⭐️⭐️ 将各种物体击中目标，会有很多彩蛋，此游戏并不会教你打高尔夫 App Store 这个我发现有点晚，后面玩了才发现是真的好玩，太有趣了。 Skate City 动作类 ⭐️⭐️⭐️ 通过不同的操作完成各种花样滑板技能🛹 App Store 背景音乐以及滑板各种花式操作，但操作难度太大 https://www.icloud.com/numbers/0Hge7DDSLtiubHI8fr2a3UBMA</description>
    </item>
    
    <item>
      <title>使用谷歌云搭建google drive离线下载服务器</title>
      <link>https://loyio.me/posts/gcp-create-gdrive-download-server/</link>
      <pubDate>Tue, 28 Apr 2020 11:43:18 +0800</pubDate>
      
      <guid>https://loyio.me/posts/gcp-create-gdrive-download-server/</guid>
      <description>1.在google云中创建一个实例 选择可用的地区，这里我选择的是新加坡，然后下面服务器配置选择Micro，允许http和https访问，最后点击创建，等待一会儿，点击右侧ssh连接服务器终端
2.安装rclone 我们使用官方的脚本进行安装
首先我们需要安装解压工具
yum -y install unzip 然后使用官方提供的命令
curl https://rclone.org/install.sh | sudo bash 稍等一会儿就安装成功了
3.配置rclone 安装完成后，我们在命令行输入以下代码
rclone config 下面就开始进行配置操作
首先是创建一个新连接
n/s/q&amp;gt; n 输入名称(自己随便输入)
name&amp;gt; gdShare 然后下面类型输入drive
Storage&amp;gt; drive 后面两步都直接回车，不输入
client_id&amp;gt; client_secret&amp;gt; 下一步选择第一个选项
scope&amp;gt; 1 再后面两步也是直接回车不输入
root_folder_id&amp;gt; service_account_file&amp;gt; 是否编辑预先配置，我们选择No
y/n&amp;gt; n 使用自动配置我们这里也是选择No
y/n&amp;gt; n 这时候会出来一段链接，点击直接打开或者复制用浏览器打开都可以，打开后，这里会要你登录你想挂载的google drive的账号，授权选择允许后会生成一个代码，将代码复制到下面的选项中就可以了
Enter verification code&amp;gt; 【生成的代码】 然后会让你选择是否是团队账号，这里我们默认选择No
y/n&amp;gt; n 然后下一步我们选择yes完成创建
y/e/d&amp;gt; y 然后可以看到我们创建的项目了
最后输入q退出配置
e/n/d/r/c/s/q&amp;gt; q 4.挂载磁盘 创建一个文件夹来挂载磁盘
mkdir /mnt/googledrive 在挂载之前，我们要先安装fuse文件系统
yum -y install fuse 然后输入挂载命令</description>
    </item>
    
  </channel>
</rss>
